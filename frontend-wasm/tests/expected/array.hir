module noname

const $0 = 0x00100000;
const $1 = 0x00100028;
const $2 = 0x00100030;

global external @__stack_pointer : i32 = $0 { id = 0 };
global external @gv1 : i32 = $1 { id = 1 };
global external @gv2 : i32 = $2 { id = 2 };

pub fn __main() -> i32 {
block0:
    v1 = const.i32 1048576 : i32;
    v2 = const.i32 5 : i32;
    v3 = call noname::sum_arr(v1, v2) : i32;
    v4 = const.i32 1048596 : i32;
    v5 = const.i32 5 : i32;
    v6 = call noname::sum_arr(v4, v5) : i32;
    v7 = add.wrapping v3, v6 : i32;
    br block1(v7);

block1(v0: i32):
    ret v0;
}

pub fn sum_arr(i32, i32) -> i32 {
block0(v0: i32, v1: i32):
    v3 = const.i32 0 : i32;
    v4 = const.i32 0 : i32;
    v5 = eq v1, 0 : i1;
    v6 = cast v5 : i32;
    v7 = neq v6, 0 : i1;
    condbr v7, block2(v4), block3;

block1(v2: i32):
    ret v2;

block2(v20: i32):
    br block1(v20);

block3:
    br block4(v0, v4, v1);

block4(v8: i32, v12: i32, v16: i32):
    v9 = cast v8 : u32;
    v10 = inttoptr v9 : *mut i32;
    v11 = load v10 : i32;
    v13 = add.wrapping v11, v12 : i32;
    v14 = const.i32 4 : i32;
    v15 = add.wrapping v8, v14 : i32;
    v17 = const.i32 -1 : i32;
    v18 = add.wrapping v16, v17 : i32;
    v19 = neq v18, 0 : i1;
    condbr v19, block4(v15, v13, v18), block6;

block5:
    br block2(v13);

block6:
    br block5;
}
