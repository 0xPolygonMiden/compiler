mod intrinsics::i32

export.is_signed
    push.2147483648 u32and push.2147483648 eq
end


export.unchecked_neg
    u32not u32wrapping_add.1
end


export.checked_neg
    dup.0
    push.2147483648
    eq
    assertz
    exec.unchecked_neg
end


export.overflowing_add
    u32assert2
    dup.0
    exec.is_signed
    dup.2
    exec.is_signed
    dup.1
    eq
    movup.3
    movup.3
    u32wrapping_add
    dup.0
    exec.is_signed
    movup.3
    neq
    movup.2
    and
end


export.wrapping_add
    exec.overflowing_add drop
end


export.checked_add
    exec.overflowing_add assertz
end


export.overflowing_sub
    u32assert2
    dup.0
    push.2147483648
    eq
    if.true
        drop
        push.2147483647
        dup.1
        exec.is_signed
        dup.0
        eq.0
        movup.3
        movup.3
        u32wrapping_add
        push.1
        u32wrapping_add
        dup.0
        exec.is_signed
        movup.3
        neq
        movup.2
        and
    else
        exec.unchecked_neg exec.overflowing_add
    end
end


export.wrapping_sub
    exec.overflowing_sub drop
end


export.checked_sub
    exec.overflowing_sub assertz
end


export.overflowing_mul
    u32assert2
    dup.0
    push.2147483648
    eq
    dup.2
    push.2147483648
    eq
    or
    if.true
        dup.0
        eq.1
        dup.2
        eq.1
        or
        movup.2
        push.4294967295
        eq
        movup.2
        push.4294967295
        eq
        or
        dup.1
        or
        push.2147483648
        push.0
        swap.2
        cdrop
        swap.1
        not
    else
        dup.0
        exec.is_signed
        dup.2
        exec.is_signed
        dup.1
        dup.1
        neq
        movdn.4
        movup.3
        dup.0
        exec.unchecked_neg
        movup.2
        cdrop
        swap.2
        dup.0
        exec.unchecked_neg
        movup.2
        cdrop
        u32overflowing_mul
        dup.1
        exec.is_signed
        or
        swap.1
        dup.0
        exec.unchecked_neg
        movup.3
        cdrop
        swap.1
    end
end


export.wrapping_mul
    exec.overflowing_mul drop
end


export.checked_mul
    exec.overflowing_mul assertz
end


export.checked_div
    u32assert2
    dup.1
    exec.unchecked_neg
    dup.2
    swap.1
    movup.3
    exec.is_signed
    dup.0
    movdn.4
    cdrop
    dup.1
    exec.unchecked_neg
    dup.2
    swap.1
    movup.3
    exec.is_signed
    dup.0
    movdn.5
    cdrop
    u32div
    movdn.2
    neq
    dup.1
    exec.unchecked_neg
    swap.1
    cdrop
end


export.icmp
    dup.1
    dup.1
    push.2147483648
    u32and
    swap.1
    push.2147483648
    u32and
    eq.0
    swap.1
    eq.0
    swap.1
    dup.1
    neq
    if.true
        movdn.2
        drop
        drop
        push.4294967295
        push.1
        swap.2
        cdrop
    else
        drop
        dup.1
        dup.1
        u32gt
        movdn.2
        u32lt
        push.0
        push.4294967295
        push.1
        swap.3
        cdrop
        swap.2
        cdrop
    end
end


export.is_lt
    exec.icmp push.4294967295 eq
end


export.is_lte
    exec.icmp neq.1
end


export.is_gt
    exec.icmp eq.1
end


export.is_gte
    exec.icmp push.4294967295 neq
end


export.pow2
    dup.0
    push.31
    u32lt
    assert
    push.1
    swap.1
    u32shl
end


export.ipow
    dup.0
    push.31
    u32lt
    assert
    dup.0
    eq.0
    dup.2
    eq.0
    or
    if.true
        eq.0
        push.1
        push.0
        swap.2
        cdrop
        swap.1
        drop
    else
        push.1
        dup.1
        push.1
        u32gt
        while.true
            dup.2
            dup.1
            u32wrapping_mul
            dup.2
            push.1
            u32and
            eq.1
            cdrop
            swap.1
            u32div.2
            movup.2
            dup.0
            u32wrapping_mul
            swap.1
            movup.2
            dup.1
            push.1
            u32gt
        end
        swap.1
        drop
        u32wrapping_mul
    end
end


export.checked_shr
    dup.0
    push.32
    u32lt
    assert
    dup.0
    eq.0
    dup.2
    eq.0
    or
    if.true
        eq.0
        swap.1
        push.0
        swap.2
        cdrop
    else
        dup.1
        push.2147483648
        u32and
        push.2147483648
        eq
        if.true
            swap.1
            dup.1
            u32shr
            push.1
            dup.2
            u32shl
            sub.1
            push.32
            movup.3
            sub
            u32shl
            u32or
            u32assert
        else
            u32shr u32assert
        end
    end
end


mod intrinsics::mem

export.extract_element
    dup.0
    push.3
    lte
    assert
    dup.0
    push.3
    lt
    movdn.5
    dup.0
    push.2
    lt
    movdn.5
    push.1
    lt
    cdrop
    movup.3
    cdrop
    movup.2
    cdrop
end


proc.load_felt_unchecked
    padw
    movup.4
    mem_loadw
    movup.4
    exec.extract_element
end


export.load_felt
    movup.2 assertz exec.load_felt_unchecked
end


export.load_sw
    dup.2
    eq.0
    dup.3
    push.8
    u32lt
    assert
    if.true
        movup.2 drop exec.load_felt_unchecked
    else
        dup.1
        eq.0
        if.true
            swap.1
            drop
            padw
            movup.4
            mem_loadw
            movup.3
            movup.3
            drop
            drop
            dup.2
            u32shl
            swap.1
            push.32
            movup.3
            u32overflowing_sub
            assertz
            u32shr
            u32or
        else
            dup.1
            eq.1
            if.true
                swap.1
                drop
                padw
                movup.4
                mem_loadw
                drop
                movdn.2
                movdn.2
                drop
                dup.2
                u32shl
                swap.1
                push.32
                movup.3
                u32overflowing_sub
                assertz
                u32shr
                u32or
            else
                swap.1
                eq.2
                if.true
                    padw
                    movup.4
                    mem_loadw
                    drop
                    drop
                    dup.2
                    u32shl
                    swap.1
                    push.32
                    movup.3
                    u32overflowing_sub
                    assertz
                    u32shr
                    u32or
                else
                    dup.0
                    u32overflowing_add.1
                    assertz
                    padw
                    movup.4
                    mem_loadw
                    movdn.4
                    drop
                    drop
                    drop
                    push.32
                    dup.3
                    u32overflowing_sub
                    assertz
                    u32shr
                    swap.1
                    padw
                    movup.4
                    mem_loadw
                    drop
                    drop
                    drop
                    movup.2
                    u32shl
                    u32or
                end
            end
        end
    end
end


export.realign_dw
    dup.3
    u32shl
    movdn.2
    dup.0
    push.32
    dup.4
    u32shr
    movup.4
    u32or
    movdn.2
    dup.3
    u32shl
    swap.1
    push.32
    movup.4
    u32shr
    u32or
    swap.1
end


export.load_dw
    dup.2
    eq.0
    dup.3
    push.8
    u32lt
    assert
    if.true
        movup.2
        drop
        dup.1
        eq.0
        if.true
            swap.1
            drop
            padw
            movup.4
            mem_loadw
            movup.4
            movup.4
            drop
            drop
        else
            dup.1
            eq.1
            if.true
                swap.1
                drop
                padw
                movup.4
                mem_loadw
                drop
                movup.3
                drop
            else
                swap.1
                eq.2
                if.true
                    padw
                    movup.4
                    mem_loadw
                    drop
                    drop
                else
                    dup.0
                    u32overflowing_add.1
                    assertz
                    padw
                    movup.4
                    mem_loadw
                    movup.4
                    movup.4
                    movup.4
                    drop
                    drop
                    drop
                    movup.4
                    padw
                    movup.4
                    mem_loadw
                    drop
                    drop
                    drop
                end
            end
        end
    else
        dup.1
        eq.0
        if.true
            swap.1
            drop
            padw
            movup.4
            mem_loadw
            movup.4
            drop
            exec.realign_dw
        else
            dup.1
            eq.1
            if.true
                swap.1
                drop
                padw
                movup.4
                mem_loadw
                drop
                exec.realign_dw
            else
                swap.1
                eq.2
                if.true
                    dup.0
                    u32overflowing_add.1
                    assertz
                    padw
                    movup.4
                    mem_loadw
                    movup.4
                    movup.4
                    movup.4
                    drop
                    drop
                    drop
                    swap.1
                    padw
                    movup.4
                    mem_loadw
                    drop
                    drop
                    exec.realign_dw
                else
                    dup.0
                    u32overflowing_add.1
                    assertz
                    padw
                    movup.4
                    mem_loadw
                    movup.4
                    movup.4
                    drop
                    drop
                    movup.2
                    padw
                    movup.4
                    mem_loadw
                    drop
                    drop
                    drop
                    exec.realign_dw
                end
            end
        end
    end
end


export.replace_element
    dup.0
    push.3
    lte
    assert
    movup.2
    dup.2
    dup.2
    push.0
    eq
    cdrop
    movdn.6
    movup.2
    dup.2
    dup.2
    push.1
    eq
    cdrop
    movdn.6
    movup.2
    dup.2
    dup.2
    push.2
    eq
    cdrop
    movdn.6
    push.3
    eq
    cdrop
    movdn.4
end


proc.store_felt_unchecked
    padw
    dup.4
    mem_loadw
    movup.6
    movup.5
    exec.replace_element
    movup.4
    mem_storew
    dropw
end


export.store_felt
    movup.2 assertz exec.store_felt_unchecked
end


export.store_sw
    dup.2
    eq.0
    dup.3
    push.8
    u32lt
    assert
    if.true
        movup.2 drop exec.store_felt_unchecked
    else
        dup.1
        eq.0
        if.true
            swap.1
            drop
            padw
            dup.4
            mem_loadw
            push.32
            dup.6
            sub
            push.4294967295
            dup.1
            u32shl
            dup.0
            u32not
            movup.4
            u32and
            movup.3
            movup.2
            u32and
            dup.7
            movup.7
            u32shr
            u32or
            swap.1
            movup.6
            movup.3
            u32shl
            u32or
            swap.1
            movup.4
            mem_storew
            dropw
        else
            dup.1
            eq.1
            if.true
                swap.1
                drop
                padw
                dup.4
                mem_loadw
                push.32
                dup.6
                sub
                push.4294967295
                dup.1
                u32shl
                dup.0
                u32not
                movup.5
                u32and
                movup.4
                movup.2
                u32and
                dup.7
                movup.7
                u32shr
                u32or
                swap.1
                movup.6
                movup.3
                u32shl
                u32or
                swap.2
                movup.4
                mem_storew
                dropw
            else
                swap.1
                eq.2
                if.true
                    padw
                    dup.4
                    mem_loadw
                    push.32
                    dup.6
                    sub
                    push.4294967295
                    dup.1
                    u32shl
                    dup.0
                    u32not
                    movup.6
                    u32and
                    movup.5
                    movup.2
                    u32and
                    dup.7
                    movup.7
                    u32shr
                    u32or
                    swap.1
                    movup.6
                    movup.3
                    u32shl
                    u32or
                    swap.3
                    movup.2
                    movup.4
                    mem_storew
                    dropw
                else
                    dup.0
                    u32overflowing_add.1
                    assertz
                    mem_load
                    push.32
                    dup.3
                    sub
                    push.4294967295
                    dup.1
                    u32shl
                    dup.0
                    u32not
                    movup.3
                    u32and
                    dup.5
                    movup.3
                    u32shl
                    u32or
                    dup.2
                    add.1
                    mem_store
                    padw
                    dup.5
                    mem_loadw
                    movup.3
                    movup.4
                    u32and
                    movup.6
                    movup.6
                    u32shr
                    u32or
                    movdn.3
                    movup.4
                    mem_storew
                    dropw
                end
            end
        end
    end
end


mod test_rust_3af3eb760fd15a611df682ed67144a5abe767c638e3c0c928720d59e06e5a5ee

export.entrypoint
    dup.0
    push.2147483648
    u32and
    eq.2147483648
    assertz
    swap.1
    dup.0
    push.2147483648
    u32and
    eq.2147483648
    assertz
    u32lt
end


program

use.test_rust_3af3eb760fd15a611df682ed67144a5abe767c638e3c0c928720d59e06e5a5ee

export."#main"
    exec.test_rust_3af3eb760fd15a611df682ed67144a5abe767c638e3c0c928720d59e06e5a5ee::entrypoint
end


