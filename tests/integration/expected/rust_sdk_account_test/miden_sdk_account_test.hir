(component 
    ;; Component Imports
    (lower ((digest 0x0000000000000000000000000000000000000000000000000000000000000000) (type (func (abi canon)  (param felt) (param felt) (param felt) (param felt) (result felt felt felt felt)))) (#miden::account #add_asset)
    (lower ((digest 0x0000000000000000000000000000000000000000000000000000000000000000) (type (func (abi canon)  (param felt) (param felt) (param felt) (param felt) (result felt felt felt felt)))) (#miden::account #remove_asset)
    (lower ((digest 0x0000000000000000000000000000000000000000000000000000000000000000) (type (func (abi canon)  (param i32) (param i32) (param i32) (param i32) (param i32) (param i32) (param i32) (param i32) (param i32) (param i32) (param i32) (param i32) (param i32) (param i32) (param i32) (param i32) (result i32 i32 i32 i32 i32 i32 i32 i32)))) (#std::crypto::hashes::blake3 #hash_2to1)
    (lower ((digest 0x0000000000000000000000000000000000000000000000000000000000000000) (type (func (abi canon)  (param felt) (param felt) (param felt) (param felt) (param felt) (param felt) (param felt) (param felt) (param felt) (param felt) (param felt) (param felt) (param i32) (param i32) (result felt felt felt felt felt felt felt felt felt felt felt felt i32)))) (#std::mem #pipe_double_words_to_memory)

    ;; Modules
    (module #miden_sdk_account_test
        ;; Constants
        (const (id 0) 0x00100000)

        ;; Global Variables
        (global (export #__stack_pointer) (id 0) (type i32) (const 0))

        ;; Functions
        (func (export #<<alloc::vec::into_iter::IntoIter<T,A> as core::ops::drop::Drop>::drop::DropGuard<T,A> as core::ops::drop::Drop>::drop)
              (param i32)
            (block 0 (param v0 i32)
                (let (v1 i32) (const.i32 0))
                (let (v2 i32) (global.load i32 (global.symbol #__stack_pointer)))
                (let (v3 i32) (const.i32 16))
                (let (v4 i32) (sub.wrapping v2 v3))
                (let (v5 (ptr i32)) (global.symbol #__stack_pointer))
                (store v5 v4)
                (let (v6 u32) (cast v0))
                (let (v7 u32) (mod.unchecked v6 2))
                (assertz v7)
                (let (v8 (ptr i32)) (inttoptr v6))
                (let (v9 i32) (load v8))
                (let (v10 u32) (cast v9))
                (let (v11 u32) (mod.unchecked v10 2))
                (assertz v11)
                (let (v12 (ptr i32)) (inttoptr v10))
                (let (v13 i32) (load v12))
                (let (v14 u32) (cast v4))
                (let (v15 u32) (add.checked v14 12))
                (let (v16 u32) (mod.unchecked v15 2))
                (assertz v16)
                (let (v17 (ptr i32)) (inttoptr v15))
                (store v17 v13)
                (let (v18 u32) (cast v9))
                (let (v19 u32) (add.checked v18 8))
                (let (v20 u32) (mod.unchecked v19 2))
                (assertz v20)
                (let (v21 (ptr i32)) (inttoptr v19))
                (let (v22 i32) (load v21))
                (let (v23 u32) (cast v4))
                (let (v24 u32) (add.checked v23 8))
                (let (v25 u32) (mod.unchecked v24 2))
                (assertz v25)
                (let (v26 (ptr i32)) (inttoptr v24))
                (store v26 v22)
                (let (v27 i32) (const.i32 8))
                (let (v28 i32) (add.wrapping v4 v27))
                (call #<alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop v28)
                (let (v29 i32) (const.i32 16))
                (let (v30 i32) (add.wrapping v4 v29))
                (let (v31 (ptr i32)) (global.symbol #__stack_pointer))
                (store v31 v30)
                (br (block 1)))

            (block 1
                (ret))
        )

        (func (export #<alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop)
              (param i32)
            (block 0 (param v0 i32)
                (let (v1 i32) (const.i32 0))
                (let (v2 u32) (cast v0))
                (let (v3 u32) (mod.unchecked v2 2))
                (assertz v3)
                (let (v4 (ptr i32)) (inttoptr v2))
                (let (v5 i32) (load v4))
                (let (v6 i1) (eq v5 0))
                (let (v7 i32) (zext v6))
                (let (v8 i1) (neq v7 0))
                (condbr v8 (block 2) (block 3)))

            (block 1
                (ret))

            (block 2
                (br (block 1)))

            (block 3
                (let (v9 u32) (cast v0))
                (let (v10 u32) (add.checked v9 4))
                (let (v11 u32) (mod.unchecked v10 2))
                (assertz v11)
                (let (v12 (ptr i32)) (inttoptr v10))
                (let (v13 i32) (load v12))
                (let (v14 i32) (const.i32 2))
                (let (v15 u32) (bitcast v14))
                (let (v16 i32) (shl.wrapping v5 v15))
                (let (v17 i32) (const.i32 4))
                (call #__rust_dealloc v13 v16 v17)
                (br (block 2)))
        )

        (func (export #core::alloc::global::GlobalAlloc::alloc_zeroed)
              (param i32) (param i32) (param i32) (result i32)
            (block 0 (param v0 i32) (param v1 i32) (param v2 i32)
                (let (v4 i32) (call #<wee_alloc::WeeAlloc as core::alloc::global::GlobalAlloc>::alloc v0 v1 v2))
                (let (v5 i1) (eq v4 0))
                (let (v6 i32) (zext v5))
                (let (v7 i1) (neq v6 0))
                (condbr v7 (block 2 v4) (block 3)))

            (block 1 (param v3 i32)
                (ret v3))

            (block 2 (param v13 i32)
                (br (block 1 v13)))

            (block 3
                (let (v8 i32) (const.i32 0))
                (let (v9 u8) (trunc v8))
                (let (v10 u32) (bitcast v2))
                (let (v11 u32) (cast v4))
                (let (v12 (ptr u8)) (inttoptr v11))
                (memset v12 v10 v9)
                (br (block 2 v4)))
        )

        (func (export #__rust_dealloc) (param i32) (param i32) (param i32)
            (block 0 (param v0 i32) (param v1 i32) (param v2 i32)
                (let (v3 i32) (const.i32 1048576))
                (call #<wee_alloc::WeeAlloc as core::alloc::global::GlobalAlloc>::dealloc v3 v0 v2 v1)
                (br (block 1)))

            (block 1
                (ret))
        )

        (func (export #<alloc::vec::into_iter::IntoIter<T,A> as core::ops::drop::Drop>::drop)
              (param i32)
            (block 0 (param v0 i32)
                (let (v1 i32) (const.i32 0))
                (let (v2 i32) (global.load i32 (global.symbol #__stack_pointer)))
                (let (v3 i32) (const.i32 16))
                (let (v4 i32) (sub.wrapping v2 v3))
                (let (v5 (ptr i32)) (global.symbol #__stack_pointer))
                (store v5 v4)
                (let (v6 u32) (cast v4))
                (let (v7 u32) (add.checked v6 12))
                (let (v8 u32) (mod.unchecked v7 2))
                (assertz v8)
                (let (v9 (ptr i32)) (inttoptr v7))
                (store v9 v0)
                (let (v10 i32) (const.i32 12))
                (let (v11 i32) (add.wrapping v4 v10))
                (call #<<alloc::vec::into_iter::IntoIter<T,A> as core::ops::drop::Drop>::drop::DropGuard<T,A> as core::ops::drop::Drop>::drop v11)
                (let (v12 i32) (const.i32 16))
                (let (v13 i32) (add.wrapping v4 v12))
                (let (v14 (ptr i32)) (global.symbol #__stack_pointer))
                (store v14 v13)
                (br (block 1)))

            (block 1
                (ret))
        )

        (func (export #get_wallet_magic_number) (result felt)
            (block 0
                (let (v1 felt) (const.felt 0))
                (let (v2 felt) (call #miden_tx_kernel_sys::get_id))
                (let (v3 i64) (const.i64 42))
                (let (v4 felt) (cast v3))
                (let (v5 felt) (add.unchecked v4 v2))
                (br (block 1 v5)))

            (block 1 (param v0 felt)
                (ret v0))
        )

        (func (export #test_add_asset) (result felt)
            (block 0
                (let (v1 i32) (const.i32 0))
                (let (v2 felt) (const.felt 0))
                (let (v3 i32) (global.load i32 (global.symbol #__stack_pointer)))
                (let (v4 i32) (const.i32 32))
                (let (v5 i32) (sub.wrapping v3 v4))
                (let (v6 (ptr i32)) (global.symbol #__stack_pointer))
                (store v6 v5)
                (let (v7 i64) (const.i64 1))
                (let (v8 felt) (cast v7))
                (let (v9 i64) (const.i64 2))
                (let (v10 felt) (cast v9))
                (let (v11 i64) (const.i64 3))
                (let (v12 felt) (cast v11))
                (let (v13 i64) (const.i64 4))
                (let (v14 felt) (cast v13))
                (let (v15 u32) (cast v5))
                (let (v16 u32) (add.checked v15 12))
                (let (v17 u32) (mod.unchecked v16 2))
                (assertz v17)
                (let (v18 (ptr felt)) (inttoptr v16))
                (store v18 v14)
                (let (v19 u32) (cast v5))
                (let (v20 u32) (add.checked v19 8))
                (let (v21 u32) (mod.unchecked v20 2))
                (assertz v21)
                (let (v22 (ptr felt)) (inttoptr v20))
                (store v22 v12)
                (let (v23 u32) (cast v5))
                (let (v24 u32) (add.checked v23 4))
                (let (v25 u32) (mod.unchecked v24 2))
                (assertz v25)
                (let (v26 (ptr felt)) (inttoptr v24))
                (store v26 v10)
                (let (v27 u32) (cast v5))
                (let (v28 u32) (mod.unchecked v27 2))
                (assertz v28)
                (let (v29 (ptr felt)) (inttoptr v27))
                (store v29 v8)
                (let (v30 i32) (const.i32 16))
                (let (v31 i32) (add.wrapping v5 v30))
                (call #miden_tx_kernel_sys::add_asset v31 v5)
                (let (v32 u32) (cast v5))
                (let (v33 u32) (add.checked v32 16))
                (let (v34 u32) (mod.unchecked v33 2))
                (assertz v34)
                (let (v35 (ptr felt)) (inttoptr v33))
                (let (v36 felt) (load v35))
                (let (v37 i32) (const.i32 32))
                (let (v38 i32) (add.wrapping v5 v37))
                (let (v39 (ptr i32)) (global.symbol #__stack_pointer))
                (store v39 v38)
                (br (block 1 v36)))

            (block 1 (param v0 felt)
                (ret v0))
        )

        (func (export #test_felt_ops_smoke)
              (param felt) (param felt) (result felt)
            (block 0 (param v0 felt) (param v1 felt)
                (let (v3 i64) (const.i64 0))
                (let (v4 i64) (cast v0))
                (let (v5 i1) (gt v0 v1))
                (let (v6 i32) (cast v5))
                (let (v7 i1) (neq v6 0))
                (condbr v7 (block 7) (block 8)))

            (block 1 (param v2 felt)
                (ret v2))

            (block 2
                (let (v41 felt) (neg v0))
                (br (block 1 v41)))

            (block 3
                (assert.eq v1 v0)
                (let (v39 felt) (cast v4))
                (let (v40 felt) (add.unchecked v0 v39))
                (ret v40))

            (block 4
                (let (v38 felt) (div.unchecked v1 v0))
                (ret v38))

            (block 5
                (let (v36 felt) (pow2 v0))
                (let (v37 felt) (mul.unchecked v36 v1))
                (ret v37))

            (block 6
                (let (v34 felt) (exp v0 v1))
                (let (v35 felt) (sub.unchecked v34 v1))
                (ret v35))

            (block 7
                (let (v32 felt) (inv v0))
                (let (v33 felt) (add.unchecked v32 v1))
                (ret v33))

            (block 8
                (let (v8 i1) (lt v1 v0))
                (let (v9 i32) (cast v8))
                (let (v10 i1) (neq v9 0))
                (condbr v10 (block 6) (block 9)))

            (block 9
                (let (v11 i1) (lte v1 v0))
                (let (v12 i32) (cast v11))
                (let (v13 i1) (neq v12 0))
                (condbr v13 (block 5) (block 10)))

            (block 10
                (let (v14 i1) (gte v0 v1))
                (let (v15 i32) (cast v14))
                (let (v16 i1) (neq v15 0))
                (condbr v16 (block 4) (block 11)))

            (block 11
                (let (v17 i1) (eq v0 v1))
                (let (v18 i32) (cast v17))
                (let (v19 i32) (const.i32 1))
                (let (v20 i1) (eq v18 v19))
                (let (v21 i32) (zext v20))
                (let (v22 i1) (neq v21 0))
                (condbr v22 (block 3) (block 12)))

            (block 12
                (let (v23 i1) (eq v0 v1))
                (let (v24 i32) (cast v23))
                (let (v25 i32) (const.i32 1))
                (let (v26 i1) (neq v24 v25))
                (let (v27 i32) (zext v26))
                (let (v28 i1) (neq v27 0))
                (condbr v28 (block 2) (block 13)))

            (block 13
                (let (v29 i1) (is_odd v1))
                (let (v30 i32) (cast v29))
                (let (v31 i1) (neq v30 0))
                (condbr v31 (block 14) (block 15)))

            (block 14
                (assert v0)
                (ret v1))

            (block 15
                (assertz v1)
                (ret v0))
        )

        (func (export #note_script) (result felt)
            (block 0
                (let (v1 i32) (const.i32 0))
                (let (v2 felt) (const.felt 0))
                (let (v3 i32) (const.i32 0))
                (let (v4 i32) (global.load i32 (global.symbol #__stack_pointer)))
                (let (v5 i32) (const.i32 16))
                (let (v6 i32) (sub.wrapping v4 v5))
                (let (v7 (ptr i32)) (global.symbol #__stack_pointer))
                (store v7 v6)
                (let (v8 i64) (const.i64 0))
                (let (v9 felt) (cast v8))
                (call #miden_tx_kernel_sys::get_inputs v6)
                (let (v10 u32) (cast v6))
                (let (v11 u32) (mod.unchecked v10 2))
                (assertz v11)
                (let (v12 (ptr i32)) (inttoptr v10))
                (let (v13 i32) (load v12))
                (let (v14 u32) (cast v6))
                (let (v15 u32) (add.checked v14 4))
                (let (v16 u32) (mod.unchecked v15 2))
                (assertz v16)
                (let (v17 (ptr i32)) (inttoptr v15))
                (let (v18 i32) (load v17))
                (let (v19 u32) (cast v6))
                (let (v20 u32) (add.checked v19 8))
                (let (v21 u32) (mod.unchecked v20 2))
                (assertz v21)
                (let (v22 (ptr i32)) (inttoptr v20))
                (let (v23 i32) (load v22))
                (let (v24 i32) (const.i32 2))
                (let (v25 u32) (bitcast v24))
                (let (v26 i32) (shl.wrapping v23 v25))
                (let (v27 i32) (add.wrapping v18 v26))
                (let (v28 u32) (cast v6))
                (let (v29 u32) (add.checked v28 12))
                (let (v30 u32) (mod.unchecked v29 2))
                (assertz v30)
                (let (v31 (ptr i32)) (inttoptr v29))
                (store v31 v27)
                (let (v32 u32) (cast v6))
                (let (v33 u32) (add.checked v32 8))
                (let (v34 u32) (mod.unchecked v33 2))
                (assertz v34)
                (let (v35 (ptr i32)) (inttoptr v33))
                (store v35 v13)
                (let (v36 u32) (cast v6))
                (let (v37 u32) (mod.unchecked v36 2))
                (assertz v37)
                (let (v38 (ptr i32)) (inttoptr v36))
                (store v38 v18)
                (br (block 2 v26 v6 v27 v9 v18)))

            (block 1 (param v0 felt))

            (block 2
                    (param v40 i32)
                    (param v42 i32)
                    (param v43 i32)
                    (param v51 felt)
                    (param v54 i32)
                (let (v41 i1) (neq v40 0))
                (condbr v41 (block 4) (block 5)))

            (block 3 (param v39 felt))

            (block 4
                (let (v52 i32) (const.i32 -4))
                (let (v53 i32) (add.wrapping v40 v52))
                (let (v55 u32) (cast v54))
                (let (v56 u32) (mod.unchecked v55 2))
                (assertz v56)
                (let (v57 (ptr felt)) (inttoptr v55))
                (let (v58 felt) (load v57))
                (let (v59 felt) (add.unchecked v51 v58))
                (let (v60 i32) (const.i32 4))
                (let (v61 i32) (add.wrapping v54 v60))
                (br (block 2 v53 v42 v43 v59 v61)))

            (block 5
                (let (v44 u32) (cast v42))
                (let (v45 u32) (add.checked v44 4))
                (let (v46 u32) (mod.unchecked v45 2))
                (assertz v46)
                (let (v47 (ptr i32)) (inttoptr v45))
                (store v47 v43)
                (call #<alloc::vec::into_iter::IntoIter<T,A> as core::ops::drop::Drop>::drop v42)
                (let (v48 i32) (const.i32 16))
                (let (v49 i32) (add.wrapping v42 v48))
                (let (v50 (ptr i32)) (global.symbol #__stack_pointer))
                (store v50 v49)
                (ret v51))
        )

        (func (export #test_blake3_hash_1to1) (param i32) (param i32)
            (block 0 (param v0 i32) (param v1 i32)
                (let (v2 u32) (cast v1))
                (let (v3 (ptr i32)) (inttoptr v2))
                (let (v4 i32) (load v3))
                (let (v5 u32) (cast v1))
                (let (v6 u32) (add.checked v5 4))
                (let (v7 (ptr i32)) (inttoptr v6))
                (let (v8 i32) (load v7))
                (let (v9 u32) (cast v1))
                (let (v10 u32) (add.checked v9 8))
                (let (v11 (ptr i32)) (inttoptr v10))
                (let (v12 i32) (load v11))
                (let (v13 u32) (cast v1))
                (let (v14 u32) (add.checked v13 12))
                (let (v15 (ptr i32)) (inttoptr v14))
                (let (v16 i32) (load v15))
                (let (v17 u32) (cast v1))
                (let (v18 u32) (add.checked v17 16))
                (let (v19 (ptr i32)) (inttoptr v18))
                (let (v20 i32) (load v19))
                (let (v21 u32) (cast v1))
                (let (v22 u32) (add.checked v21 20))
                (let (v23 (ptr i32)) (inttoptr v22))
                (let (v24 i32) (load v23))
                (let (v25 u32) (cast v1))
                (let (v26 u32) (add.checked v25 24))
                (let (v27 (ptr i32)) (inttoptr v26))
                (let (v28 i32) (load v27))
                (let (v29 u32) (cast v1))
                (let (v30 u32) (add.checked v29 28))
                (let (v31 (ptr i32)) (inttoptr v30))
                (let (v32 i32) (load v31))
                (let [(v33 i32) (v34 i32) (v35 i32) (v36 i32) (v37 i32) (v38 i32) (v39 i32) (v40 i32)] (call (#std::crypto::hashes::blake3 #hash_1to1) v4 v8 v12 v16 v20 v24 v28 v32))
                (let (v41 u32) (cast v0))
                (let (v42 (ptr i32)) (inttoptr v41))
                (store v42 v33)
                (let (v43 u32) (add.checked v41 8))
                (let (v44 (ptr i32)) (inttoptr v43))
                (store v44 v34)
                (let (v45 u32) (add.checked v41 16))
                (let (v46 (ptr i32)) (inttoptr v45))
                (store v46 v35)
                (let (v47 u32) (add.checked v41 24))
                (let (v48 (ptr i32)) (inttoptr v47))
                (store v48 v36)
                (let (v49 u32) (add.checked v41 32))
                (let (v50 (ptr i32)) (inttoptr v49))
                (store v50 v37)
                (let (v51 u32) (add.checked v41 40))
                (let (v52 (ptr i32)) (inttoptr v51))
                (store v52 v38)
                (let (v53 u32) (add.checked v41 48))
                (let (v54 (ptr i32)) (inttoptr v53))
                (store v54 v39)
                (let (v55 u32) (add.checked v41 56))
                (let (v56 (ptr i32)) (inttoptr v55))
                (store v56 v40)
                (br (block 1)))

            (block 1
                (ret))
        )

        (func (export #test_blake3_hash_2to1) (param i32) (param i32)
            (block 0 (param v0 i32) (param v1 i32)
                (let (v2 u32) (cast v1))
                (let (v3 (ptr i32)) (inttoptr v2))
                (let (v4 i32) (load v3))
                (let (v5 u32) (cast v1))
                (let (v6 u32) (add.checked v5 4))
                (let (v7 (ptr i32)) (inttoptr v6))
                (let (v8 i32) (load v7))
                (let (v9 u32) (cast v1))
                (let (v10 u32) (add.checked v9 8))
                (let (v11 (ptr i32)) (inttoptr v10))
                (let (v12 i32) (load v11))
                (let (v13 u32) (cast v1))
                (let (v14 u32) (add.checked v13 12))
                (let (v15 (ptr i32)) (inttoptr v14))
                (let (v16 i32) (load v15))
                (let (v17 u32) (cast v1))
                (let (v18 u32) (add.checked v17 16))
                (let (v19 (ptr i32)) (inttoptr v18))
                (let (v20 i32) (load v19))
                (let (v21 u32) (cast v1))
                (let (v22 u32) (add.checked v21 20))
                (let (v23 (ptr i32)) (inttoptr v22))
                (let (v24 i32) (load v23))
                (let (v25 u32) (cast v1))
                (let (v26 u32) (add.checked v25 24))
                (let (v27 (ptr i32)) (inttoptr v26))
                (let (v28 i32) (load v27))
                (let (v29 u32) (cast v1))
                (let (v30 u32) (add.checked v29 28))
                (let (v31 (ptr i32)) (inttoptr v30))
                (let (v32 i32) (load v31))
                (let (v33 u32) (cast v1))
                (let (v34 u32) (add.checked v33 32))
                (let (v35 (ptr i32)) (inttoptr v34))
                (let (v36 i32) (load v35))
                (let (v37 u32) (cast v1))
                (let (v38 u32) (add.checked v37 36))
                (let (v39 (ptr i32)) (inttoptr v38))
                (let (v40 i32) (load v39))
                (let (v41 u32) (cast v1))
                (let (v42 u32) (add.checked v41 40))
                (let (v43 (ptr i32)) (inttoptr v42))
                (let (v44 i32) (load v43))
                (let (v45 u32) (cast v1))
                (let (v46 u32) (add.checked v45 44))
                (let (v47 (ptr i32)) (inttoptr v46))
                (let (v48 i32) (load v47))
                (let (v49 u32) (cast v1))
                (let (v50 u32) (add.checked v49 48))
                (let (v51 (ptr i32)) (inttoptr v50))
                (let (v52 i32) (load v51))
                (let (v53 u32) (cast v1))
                (let (v54 u32) (add.checked v53 52))
                (let (v55 (ptr i32)) (inttoptr v54))
                (let (v56 i32) (load v55))
                (let (v57 u32) (cast v1))
                (let (v58 u32) (add.checked v57 56))
                (let (v59 (ptr i32)) (inttoptr v58))
                (let (v60 i32) (load v59))
                (let (v61 u32) (cast v1))
                (let (v62 u32) (add.checked v61 60))
                (let (v63 (ptr i32)) (inttoptr v62))
                (let (v64 i32) (load v63))
                (let [(v65 i32) (v66 i32) (v67 i32) (v68 i32) (v69 i32) (v70 i32) (v71 i32) (v72 i32)] (call (#std::crypto::hashes::blake3 #hash_2to1) v4 v8 v12 v16 v20 v24 v28 v32 v36 v40 v44 v48 v52 v56 v60 v64))
                (let (v73 u32) (cast v0))
                (let (v74 (ptr i32)) (inttoptr v73))
                (store v74 v65)
                (let (v75 u32) (add.checked v73 8))
                (let (v76 (ptr i32)) (inttoptr v75))
                (store v76 v66)
                (let (v77 u32) (add.checked v73 16))
                (let (v78 (ptr i32)) (inttoptr v77))
                (store v78 v67)
                (let (v79 u32) (add.checked v73 24))
                (let (v80 (ptr i32)) (inttoptr v79))
                (store v80 v68)
                (let (v81 u32) (add.checked v73 32))
                (let (v82 (ptr i32)) (inttoptr v81))
                (store v82 v69)
                (let (v83 u32) (add.checked v73 40))
                (let (v84 (ptr i32)) (inttoptr v83))
                (store v84 v70)
                (let (v85 u32) (add.checked v73 48))
                (let (v86 (ptr i32)) (inttoptr v85))
                (store v86 v71)
                (let (v87 u32) (add.checked v73 56))
                (let (v88 (ptr i32)) (inttoptr v87))
                (store v88 v72)
                (br (block 1)))

            (block 1
                (ret))
        )

        (func (export #test_rpo_falcon512_verify) (param i32) (param i32)
            (block 0 (param v0 i32) (param v1 i32)
                (let (v2 u32) (cast v0))
                (let (v3 u32) (mod.unchecked v2 2))
                (assertz v3)
                (let (v4 (ptr felt)) (inttoptr v2))
                (let (v5 felt) (load v4))
                (let (v6 u32) (cast v0))
                (let (v7 u32) (add.checked v6 4))
                (let (v8 u32) (mod.unchecked v7 2))
                (assertz v8)
                (let (v9 (ptr felt)) (inttoptr v7))
                (let (v10 felt) (load v9))
                (let (v11 u32) (cast v0))
                (let (v12 u32) (add.checked v11 8))
                (let (v13 u32) (mod.unchecked v12 2))
                (assertz v13)
                (let (v14 (ptr felt)) (inttoptr v12))
                (let (v15 felt) (load v14))
                (let (v16 u32) (cast v0))
                (let (v17 u32) (add.checked v16 12))
                (let (v18 u32) (mod.unchecked v17 2))
                (assertz v18)
                (let (v19 (ptr felt)) (inttoptr v17))
                (let (v20 felt) (load v19))
                (let (v21 u32) (cast v1))
                (let (v22 u32) (mod.unchecked v21 2))
                (assertz v22)
                (let (v23 (ptr felt)) (inttoptr v21))
                (let (v24 felt) (load v23))
                (let (v25 u32) (cast v1))
                (let (v26 u32) (add.checked v25 4))
                (let (v27 u32) (mod.unchecked v26 2))
                (assertz v27)
                (let (v28 (ptr felt)) (inttoptr v26))
                (let (v29 felt) (load v28))
                (let (v30 u32) (cast v1))
                (let (v31 u32) (add.checked v30 8))
                (let (v32 u32) (mod.unchecked v31 2))
                (assertz v32)
                (let (v33 (ptr felt)) (inttoptr v31))
                (let (v34 felt) (load v33))
                (let (v35 u32) (cast v1))
                (let (v36 u32) (add.checked v35 12))
                (let (v37 u32) (mod.unchecked v36 2))
                (assertz v37)
                (let (v38 (ptr felt)) (inttoptr v36))
                (let (v39 felt) (load v38))
                (call (#std::crypto::dsa::rpo_falcon512 #rpo_falcon512_verify) v5 v10 v15 v20 v24 v29 v34 v39)
                (br (block 1)))

            (block 1
                (ret))
        )

        (func (export #test_pipe_words_to_memory) (param i32) (param felt)
            (block 0 (param v0 i32) (param v1 felt)
                (call #miden_stdlib_sys::stdlib::mem::pipe_words_to_memory v0 v1)
                (br (block 1)))

            (block 1
                (ret))
        )

        (func (export #test_pipe_double_words_to_memory)
              (param i32) (param felt)
            (block 0 (param v0 i32) (param v1 felt)
                (call #miden_stdlib_sys::stdlib::mem::pipe_double_words_to_memory v0 v1)
                (br (block 1)))

            (block 1
                (ret))
        )

        (func (export #test_remove_asset) (param i32) (result felt)
            (block 0 (param v0 i32)
                (let (v2 i32) (const.i32 0))
                (let (v3 felt) (const.felt 0))
                (let (v4 i32) (global.load i32 (global.symbol #__stack_pointer)))
                (let (v5 i32) (const.i32 16))
                (let (v6 i32) (sub.wrapping v4 v5))
                (let (v7 (ptr i32)) (global.symbol #__stack_pointer))
                (store v7 v6)
                (call #miden_tx_kernel_sys::remove_asset v6 v0)
                (let (v8 u32) (cast v6))
                (let (v9 u32) (mod.unchecked v8 2))
                (assertz v9)
                (let (v10 (ptr felt)) (inttoptr v8))
                (let (v11 felt) (load v10))
                (let (v12 i32) (const.i32 16))
                (let (v13 i32) (add.wrapping v6 v12))
                (let (v14 (ptr i32)) (global.symbol #__stack_pointer))
                (store v14 v13)
                (br (block 1 v11)))

            (block 1 (param v1 felt)
                (ret v1))
        )

        (func (export #test_create_note)
              (param i32) (param felt) (param felt) (param i32) (result felt)
            (block 0
                    (param v0 i32)
                    (param v1 felt)
                    (param v2 felt)
                    (param v3 i32)
                (let (v5 felt) (call #miden_tx_kernel_sys::create_note v0 v1 v2 v3))
                (br (block 1 v5)))

            (block 1 (param v4 felt)
                (ret v4))
        )

        (func (export #__rust_alloc) (param i32) (param i32) (result i32)
            (block 0 (param v0 i32) (param v1 i32)
                (let (v3 i32) (const.i32 1048576))
                (let (v4 i32) (call #<wee_alloc::WeeAlloc as core::alloc::global::GlobalAlloc>::alloc v3 v1 v0))
                (br (block 1 v4)))

            (block 1 (param v2 i32)
                (ret v2))
        )

        (func (export #__rust_alloc_zeroed) (param i32) (param i32) (result i32)
            (block 0 (param v0 i32) (param v1 i32)
                (let (v3 i32) (const.i32 1048576))
                (let (v4 i32) (call #core::alloc::global::GlobalAlloc::alloc_zeroed v3 v1 v0))
                (br (block 1 v4)))

            (block 1 (param v2 i32)
                (ret v2))
        )

        (func (export #wee_alloc::neighbors::Neighbors<T>::remove)
              (param i32)
            (block 0 (param v0 i32)
                (let (v1 i32) (const.i32 0))
                (let (v2 u32) (cast v0))
                (let (v3 u32) (mod.unchecked v2 2))
                (assertz v3)
                (let (v4 (ptr i32)) (inttoptr v2))
                (let (v5 i32) (load v4))
                (let (v6 i32) (const.i32 2))
                (let (v7 i32) (band v5 v6))
                (let (v8 i1) (neq v7 0))
                (condbr v8 (block 2 v0 v5) (block 3)))

            (block 1
                (ret))

            (block 2 (param v37 i32) (param v54 i32)
                (let (v38 u32) (cast v37))
                (let (v39 u32) (add.checked v38 4))
                (let (v40 u32) (mod.unchecked v39 2))
                (assertz v40)
                (let (v41 (ptr i32)) (inttoptr v39))
                (let (v42 i32) (load v41))
                (let (v43 i32) (const.i32 -4))
                (let (v44 i32) (band v42 v43))
                (let (v45 i1) (eq v44 0))
                (let (v46 i32) (zext v45))
                (let (v47 i1) (neq v46 0))
                (condbr v47 (block 5 v37 v42 v54) (block 6)))

            (block 3
                (let (v9 i32) (const.i32 -4))
                (let (v10 i32) (band v5 v9))
                (let (v11 i1) (eq v10 0))
                (let (v12 i32) (zext v11))
                (let (v13 i1) (neq v12 0))
                (condbr v13 (block 2 v0 v5) (block 4)))

            (block 4
                (let (v14 u32) (cast v10))
                (let (v15 u32) (add.checked v14 4))
                (let (v16 u32) (mod.unchecked v15 2))
                (assertz v16)
                (let (v17 (ptr i32)) (inttoptr v15))
                (let (v18 i32) (load v17))
                (let (v19 i32) (const.i32 3))
                (let (v20 i32) (band v18 v19))
                (let (v21 u32) (cast v0))
                (let (v22 u32) (add.checked v21 4))
                (let (v23 u32) (mod.unchecked v22 2))
                (assertz v23)
                (let (v24 (ptr i32)) (inttoptr v22))
                (let (v25 i32) (load v24))
                (let (v26 i32) (const.i32 -4))
                (let (v27 i32) (band v25 v26))
                (let (v28 i32) (bor v20 v27))
                (let (v29 u32) (cast v10))
                (let (v30 u32) (add.checked v29 4))
                (let (v31 u32) (mod.unchecked v30 2))
                (assertz v31)
                (let (v32 (ptr i32)) (inttoptr v30))
                (store v32 v28)
                (let (v33 u32) (cast v0))
                (let (v34 u32) (mod.unchecked v33 2))
                (assertz v34)
                (let (v35 (ptr i32)) (inttoptr v33))
                (let (v36 i32) (load v35))
                (br (block 2 v0 v36)))

            (block 5 (param v70 i32) (param v71 i32) (param v78 i32)
                (let (v72 i32) (const.i32 3))
                (let (v73 i32) (band v71 v72))
                (let (v74 u32) (cast v70))
                (let (v75 u32) (add.checked v74 4))
                (let (v76 u32) (mod.unchecked v75 2))
                (assertz v76)
                (let (v77 (ptr i32)) (inttoptr v75))
                (store v77 v73)
                (let (v79 i32) (const.i32 3))
                (let (v80 i32) (band v78 v79))
                (let (v81 u32) (cast v70))
                (let (v82 u32) (mod.unchecked v81 2))
                (assertz v82)
                (let (v83 (ptr i32)) (inttoptr v81))
                (store v83 v80)
                (br (block 1)))

            (block 6
                (let (v48 u32) (cast v44))
                (let (v49 u32) (mod.unchecked v48 2))
                (assertz v49)
                (let (v50 (ptr i32)) (inttoptr v48))
                (let (v51 i32) (load v50))
                (let (v52 i32) (const.i32 3))
                (let (v53 i32) (band v51 v52))
                (let (v55 i32) (const.i32 -4))
                (let (v56 i32) (band v54 v55))
                (let (v57 i32) (bor v53 v56))
                (let (v58 u32) (cast v44))
                (let (v59 u32) (mod.unchecked v58 2))
                (assertz v59)
                (let (v60 (ptr i32)) (inttoptr v58))
                (store v60 v57)
                (let (v61 u32) (cast v37))
                (let (v62 u32) (add.checked v61 4))
                (let (v63 u32) (mod.unchecked v62 2))
                (assertz v63)
                (let (v64 (ptr i32)) (inttoptr v62))
                (let (v65 i32) (load v64))
                (let (v66 u32) (cast v37))
                (let (v67 u32) (mod.unchecked v66 2))
                (assertz v67)
                (let (v68 (ptr i32)) (inttoptr v66))
                (let (v69 i32) (load v68))
                (br (block 5 v37 v65 v69)))
        )

        (func (export #<wee_alloc::LargeAllocPolicy as wee_alloc::AllocPolicy>::new_cell_for_free_list)
              (param i32) (param i32) (param i32) (param i32)
            (block 0 (param v0 i32) (param v1 i32) (param v2 i32) (param v3 i32)
                (let (v4 i32) (const.i32 2))
                (let (v5 u32) (bitcast v4))
                (let (v6 i32) (shl.wrapping v2 v5))
                (let (v7 i32) (const.i32 3))
                (let (v8 u32) (bitcast v7))
                (let (v9 i32) (shl.wrapping v3 v8))
                (let (v10 i32) (const.i32 512))
                (let (v11 i32) (add.wrapping v9 v10))
                (let (v12 u32) (bitcast v6))
                (let (v13 u32) (bitcast v11))
                (let (v14 i1) (gt v12 v13))
                (let (v15 i32) (sext v14))
                (let (v16 i1) (neq v15 0))
                (let (v17 i32) (select v16 v6 v11))
                (let (v18 i32) (const.i32 65543))
                (let (v19 i32) (add.wrapping v17 v18))
                (let (v20 i32) (const.i32 16))
                (let (v21 u32) (bitcast v19))
                (let (v22 u32) (bitcast v20))
                (let (v23 u32) (shr.wrapping v21 v22))
                (let (v24 i32) (bitcast v23))
                (let (v25 u32) (cast v24))
                (let (v26 i32) (memory.grow v25))
                (let (v27 i32) (const.i32 -1))
                (let (v28 i1) (neq v26 v27))
                (let (v29 i32) (zext v28))
                (let (v30 i1) (neq v29 0))
                (condbr v30 (block 3) (block 4)))

            (block 1
                (ret))

            (block 2 (param v50 i32) (param v51 i32) (param v56 i32)
                (let (v52 u32) (cast v50))
                (let (v53 u32) (add.checked v52 4))
                (let (v54 u32) (mod.unchecked v53 2))
                (assertz v54)
                (let (v55 (ptr i32)) (inttoptr v53))
                (store v55 v51)
                (let (v57 u32) (cast v50))
                (let (v58 u32) (mod.unchecked v57 2))
                (assertz v58)
                (let (v59 (ptr i32)) (inttoptr v57))
                (store v59 v56)
                (br (block 1)))

            (block 3
                (let (v33 i32) (const.i32 16))
                (let (v34 u32) (bitcast v33))
                (let (v35 i32) (shl.wrapping v26 v34))
                (let (v36 i64) (const.i64 0))
                (let (v37 u32) (cast v35))
                (let (v38 u32) (add.checked v37 4))
                (let (v39 u32) (mod.unchecked v38 2))
                (assertz v39)
                (let (v40 (ptr i64)) (inttoptr v38))
                (store v40 v36)
                (let (v41 i32) (const.i32 -65536))
                (let (v42 i32) (band v19 v41))
                (let (v43 i32) (add.wrapping v35 v42))
                (let (v44 i32) (const.i32 2))
                (let (v45 i32) (bor v43 v44))
                (let (v46 u32) (cast v35))
                (let (v47 u32) (mod.unchecked v46 2))
                (assertz v47)
                (let (v48 (ptr i32)) (inttoptr v46))
                (store v48 v45)
                (let (v49 i32) (const.i32 0))
                (br (block 2 v0 v35 v49)))

            (block 4
                (let (v31 i32) (const.i32 1))
                (let (v32 i32) (const.i32 0))
                (br (block 2 v0 v32 v31)))
        )

        (func (export #wee_alloc::alloc_first_fit)
              (param i32) (param i32) (param i32) (result i32)
            (block 0 (param v0 i32) (param v1 i32) (param v2 i32)
                (let (v4 i32) (const.i32 0))
                (let (v5 i32) (const.i32 -1))
                (let (v6 i32) (add.wrapping v1 v5))
                (let (v7 i32) (const.i32 0))
                (let (v8 i32) (const.i32 0))
                (let (v9 i32) (sub.wrapping v8 v1))
                (let (v10 i32) (const.i32 2))
                (let (v11 u32) (bitcast v10))
                (let (v12 i32) (shl.wrapping v0 v11))
                (let (v13 u32) (cast v2))
                (let (v14 u32) (mod.unchecked v13 2))
                (assertz v14)
                (let (v15 (ptr i32)) (inttoptr v13))
                (let (v16 i32) (load v15))
                (br (block 2 v16 v12 v9 v6 v2 v7)))

            (block 1 (param v3 i32))

            (block 2
                    (param v18 i32)
                    (param v206 i32)
                    (param v209 i32)
                    (param v212 i32)
                    (param v215 i32)
                    (param v237 i32)
                (let (v19 i1) (eq v18 0))
                (let (v20 i32) (zext v19))
                (let (v21 i1) (neq v20 0))
                (condbr v21 (block 5 v237) (block 6)))

            (block 3 (param v17 i32))

            (block 4
                    (param v238 i32)
                    (param v239 i32)
                    (param v243 i32)
                    (param v244 i32)
                    (param v245 i32)
                    (param v246 i32)
                (let (v240 u32) (cast v238))
                (let (v241 u32) (mod.unchecked v240 2))
                (assertz v241)
                (let (v242 (ptr i32)) (inttoptr v240))
                (store v242 v239)
                (br (block 2 v239 v243 v244 v245 v238 v246)))

            (block 5 (param v236 i32)
                (ret v236))

            (block 6
                (br (block 9 v18 v206 v209 v212 v215 v237)))

            (block 7 (param v227 i32) (param v228 i32)
                (let (v229 i32) (const.i32 1))
                (let (v230 i32) (bor v228 v229))
                (let (v231 u32) (cast v227))
                (let (v232 u32) (mod.unchecked v231 2))
                (assertz v232)
                (let (v233 (ptr i32)) (inttoptr v231))
                (store v233 v230)
                (let (v234 i32) (const.i32 8))
                (let (v235 i32) (add.wrapping v227 v234))
                (br (block 5 v235)))

            (block 8
                (let (v216 i32) (const.i32 -3))
                (let (v217 i32) (band v145 v216))
                (let (v218 u32) (cast v122))
                (let (v219 u32) (mod.unchecked v218 2))
                (assertz v219)
                (let (v220 (ptr i32)) (inttoptr v218))
                (store v220 v217)
                (let (v221 u32) (cast v120))
                (let (v222 u32) (mod.unchecked v221 2))
                (assertz v222)
                (let (v223 (ptr i32)) (inttoptr v221))
                (let (v224 i32) (load v223))
                (let (v225 i32) (const.i32 2))
                (let (v226 i32) (bor v224 v225))
                (br (block 7 v120 v226)))

            (block 9
                    (param v22 i32)
                    (param v40 i32)
                    (param v49 i32)
                    (param v56 i32)
                    (param v59 i32)
                    (param v247 i32)
                (let (v23 u32) (cast v22))
                (let (v24 u32) (add.checked v23 8))
                (let (v25 u32) (mod.unchecked v24 2))
                (assertz v25)
                (let (v26 (ptr i32)) (inttoptr v24))
                (let (v27 i32) (load v26))
                (let (v28 i32) (const.i32 1))
                (let (v29 i32) (band v27 v28))
                (let (v30 i1) (neq v29 0))
                (condbr v30 (block 11) (block 12)))

            (block 10)

            (block 11
                (let (v156 i32) (const.i32 -2))
                (let (v157 i32) (band v27 v156))
                (let (v158 u32) (cast v22))
                (let (v159 u32) (add.checked v158 8))
                (let (v160 u32) (mod.unchecked v159 2))
                (assertz v160)
                (let (v161 (ptr i32)) (inttoptr v159))
                (store v161 v157)
                (let (v162 u32) (cast v22))
                (let (v163 u32) (add.checked v162 4))
                (let (v164 u32) (mod.unchecked v163 2))
                (assertz v164)
                (let (v165 (ptr i32)) (inttoptr v163))
                (let (v166 i32) (load v165))
                (let (v167 i32) (const.i32 -4))
                (let (v168 i32) (band v166 v167))
                (let (v169 i1) (neq v168 0))
                (condbr v169 (block 22) (block 23)))

            (block 12
                (let (v31 u32) (cast v22))
                (let (v32 u32) (mod.unchecked v31 2))
                (assertz v32)
                (let (v33 (ptr i32)) (inttoptr v31))
                (let (v34 i32) (load v33))
                (let (v35 i32) (const.i32 -4))
                (let (v36 i32) (band v34 v35))
                (let (v37 i32) (const.i32 8))
                (let (v38 i32) (add.wrapping v22 v37))
                (let (v39 i32) (sub.wrapping v36 v38))
                (let (v41 u32) (bitcast v39))
                (let (v42 u32) (bitcast v40))
                (let (v43 i1) (lt v41 v42))
                (let (v44 i32) (sext v43))
                (let (v45 i1) (neq v44 0))
                (condbr v45 (block 4 v59 v27 v40 v49 v56 v247) (block 13)))

            (block 13
                (let (v46 i32) (const.i32 72))
                (let (v47 i32) (add.wrapping v38 v46))
                (let (v48 i32) (sub.wrapping v36 v40))
                (let (v50 i32) (band v48 v49))
                (let (v51 u32) (bitcast v47))
                (let (v52 u32) (bitcast v50))
                (let (v53 i1) (lte v51 v52))
                (let (v54 i32) (sext v53))
                (let (v55 i1) (neq v54 0))
                (condbr v55 (block 14) (block 15)))

            (block 14
                (let (v69 i32) (const.i32 0))
                (let (v70 i32) (const.i32 0))
                (let (v71 u32) (cast v50))
                (let (v72 u32) (mod.unchecked v71 2))
                (assertz v72)
                (let (v73 (ptr i32)) (inttoptr v71))
                (store v73 v70)
                (let (v74 i32) (const.i32 -8))
                (let (v75 i32) (add.wrapping v50 v74))
                (let (v76 i64) (const.i64 0))
                (let (v77 u32) (cast v75))
                (let (v78 u32) (mod.unchecked v77 2))
                (assertz v78)
                (let (v79 (ptr i64)) (inttoptr v77))
                (store v79 v76)
                (let (v80 u32) (cast v22))
                (let (v81 u32) (mod.unchecked v80 2))
                (assertz v81)
                (let (v82 (ptr i32)) (inttoptr v80))
                (let (v83 i32) (load v82))
                (let (v84 i32) (const.i32 -4))
                (let (v85 i32) (band v83 v84))
                (let (v86 u32) (cast v75))
                (let (v87 u32) (mod.unchecked v86 2))
                (assertz v87)
                (let (v88 (ptr i32)) (inttoptr v86))
                (store v88 v85)
                (let (v89 u32) (cast v22))
                (let (v90 u32) (mod.unchecked v89 2))
                (assertz v90)
                (let (v91 (ptr i32)) (inttoptr v89))
                (let (v92 i32) (load v91))
                (let (v93 i32) (const.i32 2))
                (let (v94 i32) (band v92 v93))
                (let (v95 i1) (neq v94 0))
                (condbr v95 (block 17 v75 v69 v22) (block 18)))

            (block 15
                (let (v57 i32) (band v56 v38))
                (let (v58 i1) (neq v57 0))
                (condbr v58 (block 4 v59 v27 v40 v49 v56 v247) (block 16)))

            (block 16
                (let (v60 i32) (const.i32 -4))
                (let (v61 i32) (band v27 v60))
                (let (v62 u32) (cast v59))
                (let (v63 u32) (mod.unchecked v62 2))
                (assertz v63)
                (let (v64 (ptr i32)) (inttoptr v62))
                (store v64 v61)
                (let (v65 u32) (cast v22))
                (let (v66 u32) (mod.unchecked v65 2))
                (assertz v66)
                (let (v67 (ptr i32)) (inttoptr v65))
                (let (v68 i32) (load v67))
                (br (block 7 v22 v68)))

            (block 17 (param v120 i32) (param v121 i32) (param v122 i32)
                (let (v123 i32) (bor v121 v122))
                (let (v124 u32) (cast v120))
                (let (v125 u32) (add.checked v124 4))
                (let (v126 u32) (mod.unchecked v125 2))
                (assertz v126)
                (let (v127 (ptr i32)) (inttoptr v125))
                (store v127 v123)
                (let (v128 u32) (cast v122))
                (let (v129 u32) (add.checked v128 8))
                (let (v130 u32) (mod.unchecked v129 2))
                (assertz v130)
                (let (v131 (ptr i32)) (inttoptr v129))
                (let (v132 i32) (load v131))
                (let (v133 i32) (const.i32 -2))
                (let (v134 i32) (band v132 v133))
                (let (v135 u32) (cast v122))
                (let (v136 u32) (add.checked v135 8))
                (let (v137 u32) (mod.unchecked v136 2))
                (assertz v137)
                (let (v138 (ptr i32)) (inttoptr v136))
                (store v138 v134)
                (let (v139 u32) (cast v122))
                (let (v140 u32) (mod.unchecked v139 2))
                (assertz v140)
                (let (v141 (ptr i32)) (inttoptr v139))
                (let (v142 i32) (load v141))
                (let (v143 i32) (const.i32 3))
                (let (v144 i32) (band v142 v143))
                (let (v145 i32) (bor v144 v120))
                (let (v146 u32) (cast v122))
                (let (v147 u32) (mod.unchecked v146 2))
                (assertz v147)
                (let (v148 (ptr i32)) (inttoptr v146))
                (store v148 v145)
                (let (v149 i32) (const.i32 2))
                (let (v150 i32) (band v142 v149))
                (let (v151 i1) (neq v150 0))
                (condbr v151 (block 8) (block 20)))

            (block 18
                (let (v96 i32) (const.i32 -4))
                (let (v97 i32) (band v92 v96))
                (let (v98 i1) (eq v97 0))
                (let (v99 i32) (zext v98))
                (let (v100 i1) (neq v99 0))
                (condbr v100 (block 17 v75 v69 v22) (block 19)))

            (block 19
                (let (v101 u32) (cast v97))
                (let (v102 u32) (add.checked v101 4))
                (let (v103 u32) (mod.unchecked v102 2))
                (assertz v103)
                (let (v104 (ptr i32)) (inttoptr v102))
                (let (v105 i32) (load v104))
                (let (v106 i32) (const.i32 3))
                (let (v107 i32) (band v105 v106))
                (let (v108 i32) (bor v107 v75))
                (let (v109 u32) (cast v97))
                (let (v110 u32) (add.checked v109 4))
                (let (v111 u32) (mod.unchecked v110 2))
                (assertz v111)
                (let (v112 (ptr i32)) (inttoptr v110))
                (store v112 v108)
                (let (v113 u32) (cast v75))
                (let (v114 u32) (add.checked v113 4))
                (let (v115 u32) (mod.unchecked v114 2))
                (assertz v115)
                (let (v116 (ptr i32)) (inttoptr v114))
                (let (v117 i32) (load v116))
                (let (v118 i32) (const.i32 3))
                (let (v119 i32) (band v117 v118))
                (br (block 17 v75 v119 v22)))

            (block 20
                (let (v152 u32) (cast v120))
                (let (v153 u32) (mod.unchecked v152 2))
                (assertz v153)
                (let (v154 (ptr i32)) (inttoptr v152))
                (let (v155 i32) (load v154))
                (br (block 7 v120 v155)))

            (block 21
                    (param v180 i32)
                    (param v190 i32)
                    (param v201 i32)
                    (param v208 i32)
                    (param v211 i32)
                    (param v214 i32)
                    (param v249 i32)
                (call #wee_alloc::neighbors::Neighbors<T>::remove v180)
                (let (v181 u32) (cast v180))
                (let (v182 (ptr u8)) (inttoptr v181))
                (let (v183 u8) (load v182))
                (let (v184 i32) (zext v183))
                (let (v185 i32) (const.i32 2))
                (let (v186 i32) (band v184 v185))
                (let (v187 i1) (eq v186 0))
                (let (v188 i32) (zext v187))
                (let (v189 i1) (neq v188 0))
                (condbr v189 (block 24 v201 v190 v208 v211 v214 v249) (block 25)))

            (block 22
                (let (v171 i32) (const.i32 0))
                (let (v172 u32) (cast v168))
                (let (v173 (ptr u8)) (inttoptr v172))
                (let (v174 u8) (load v173))
                (let (v175 i32) (zext v174))
                (let (v176 i32) (const.i32 1))
                (let (v177 i32) (band v175 v176))
                (let (v178 i1) (neq v177 0))
                (let (v179 i32) (select v178 v171 v168))
                (br (block 21 v22 v179 v59 v40 v49 v56 v247)))

            (block 23
                (let (v170 i32) (const.i32 0))
                (br (block 21 v22 v170 v59 v40 v49 v56 v247)))

            (block 24
                    (param v200 i32)
                    (param v202 i32)
                    (param v207 i32)
                    (param v210 i32)
                    (param v213 i32)
                    (param v248 i32)
                (let (v203 u32) (cast v200))
                (let (v204 u32) (mod.unchecked v203 2))
                (assertz v204)
                (let (v205 (ptr i32)) (inttoptr v203))
                (store v205 v202)
                (br (block 9 v202 v207 v210 v213 v200 v248)))

            (block 25
                (let (v191 u32) (cast v190))
                (let (v192 u32) (mod.unchecked v191 2))
                (assertz v192)
                (let (v193 (ptr i32)) (inttoptr v191))
                (let (v194 i32) (load v193))
                (let (v195 i32) (const.i32 2))
                (let (v196 i32) (bor v194 v195))
                (let (v197 u32) (cast v190))
                (let (v198 u32) (mod.unchecked v197 2))
                (assertz v198)
                (let (v199 (ptr i32)) (inttoptr v197))
                (store v199 v196)
                (br (block 24 v201 v190 v208 v211 v214 v249)))
        )

        (func (export #<wee_alloc::WeeAlloc as core::alloc::global::GlobalAlloc>::alloc)
              (param i32) (param i32) (param i32) (result i32)
            (block 0 (param v0 i32) (param v1 i32) (param v2 i32)
                (let (v4 i32) (const.i32 0))
                (let (v5 i32) (global.load i32 (global.symbol #__stack_pointer)))
                (let (v6 i32) (const.i32 16))
                (let (v7 i32) (sub.wrapping v5 v6))
                (let (v8 (ptr i32)) (global.symbol #__stack_pointer))
                (store v8 v7)
                (let (v9 i32) (const.i32 1))
                (let (v10 i32) (const.i32 1))
                (let (v11 u32) (bitcast v1))
                (let (v12 u32) (bitcast v10))
                (let (v13 i1) (gt v11 v12))
                (let (v14 i32) (sext v13))
                (let (v15 i1) (neq v14 0))
                (let (v16 i32) (select v15 v1 v9))
                (let (v17 i1) (eq v2 0))
                (let (v18 i32) (zext v17))
                (let (v19 i1) (neq v18 0))
                (condbr v19 (block 2 v7 v16) (block 3)))

            (block 1 (param v3 i32)
                (ret v3))

            (block 2 (param v95 i32) (param v100 i32)
                (let (v97 i32) (const.i32 16))
                (let (v98 i32) (add.wrapping v95 v97))
                (let (v99 (ptr i32)) (global.symbol #__stack_pointer))
                (store v99 v98)
                (br (block 1 v100)))

            (block 3
                (let (v20 u32) (cast v0))
                (let (v21 u32) (mod.unchecked v20 2))
                (assertz v21)
                (let (v22 (ptr i32)) (inttoptr v20))
                (let (v23 i32) (load v22))
                (let (v24 u32) (cast v7))
                (let (v25 u32) (add.checked v24 12))
                (let (v26 u32) (mod.unchecked v25 2))
                (assertz v26)
                (let (v27 (ptr i32)) (inttoptr v25))
                (store v27 v23)
                (let (v28 i32) (const.i32 3))
                (let (v29 i32) (add.wrapping v2 v28))
                (let (v30 i32) (const.i32 2))
                (let (v31 u32) (bitcast v29))
                (let (v32 u32) (bitcast v30))
                (let (v33 u32) (shr.wrapping v31 v32))
                (let (v34 i32) (bitcast v33))
                (let (v35 i32) (const.i32 12))
                (let (v36 i32) (add.wrapping v7 v35))
                (let (v37 i32) (call #wee_alloc::alloc_first_fit v34 v16 v36))
                (let (v38 i1) (eq v37 0))
                (let (v39 i32) (zext v38))
                (let (v40 i1) (neq v39 0))
                (condbr v40 (block 4) (block 5)))

            (block 4
                (call #<wee_alloc::LargeAllocPolicy as wee_alloc::AllocPolicy>::new_cell_for_free_list v7 v7 v34 v16)
                (let (v49 u32) (cast v7))
                (let (v50 u32) (mod.unchecked v49 2))
                (assertz v50)
                (let (v51 (ptr i32)) (inttoptr v49))
                (let (v52 i32) (load v51))
                (let (v53 i1) (eq v52 0))
                (let (v54 i32) (zext v53))
                (let (v55 i1) (neq v54 0))
                (condbr v55 (block 7) (block 8)))

            (block 5
                (let (v41 u32) (cast v7))
                (let (v42 u32) (add.checked v41 12))
                (let (v43 u32) (mod.unchecked v42 2))
                (assertz v43)
                (let (v44 (ptr i32)) (inttoptr v42))
                (let (v45 i32) (load v44))
                (let (v46 u32) (cast v0))
                (let (v47 u32) (mod.unchecked v46 2))
                (assertz v47)
                (let (v48 (ptr i32)) (inttoptr v46))
                (store v48 v45)
                (br (block 2 v7 v37)))

            (block 6 (param v96 i32)
                (let (v94 i32) (const.i32 0))
                (br (block 2 v96 v94)))

            (block 7
                (let (v64 u32) (cast v7))
                (let (v65 u32) (add.checked v64 4))
                (let (v66 u32) (mod.unchecked v65 2))
                (assertz v66)
                (let (v67 (ptr i32)) (inttoptr v65))
                (let (v68 i32) (load v67))
                (let (v69 u32) (cast v7))
                (let (v70 u32) (add.checked v69 12))
                (let (v71 u32) (mod.unchecked v70 2))
                (assertz v71)
                (let (v72 (ptr i32)) (inttoptr v70))
                (let (v73 i32) (load v72))
                (let (v74 u32) (cast v68))
                (let (v75 u32) (add.checked v74 8))
                (let (v76 u32) (mod.unchecked v75 2))
                (assertz v76)
                (let (v77 (ptr i32)) (inttoptr v75))
                (store v77 v73)
                (let (v78 u32) (cast v7))
                (let (v79 u32) (add.checked v78 12))
                (let (v80 u32) (mod.unchecked v79 2))
                (assertz v80)
                (let (v81 (ptr i32)) (inttoptr v79))
                (store v81 v68)
                (let (v82 i32) (const.i32 12))
                (let (v83 i32) (add.wrapping v7 v82))
                (let (v84 i32) (call #wee_alloc::alloc_first_fit v34 v16 v83))
                (let (v85 u32) (cast v7))
                (let (v86 u32) (add.checked v85 12))
                (let (v87 u32) (mod.unchecked v86 2))
                (assertz v87)
                (let (v88 (ptr i32)) (inttoptr v86))
                (let (v89 i32) (load v88))
                (let (v90 u32) (cast v0))
                (let (v91 u32) (mod.unchecked v90 2))
                (assertz v91)
                (let (v92 (ptr i32)) (inttoptr v90))
                (store v92 v89)
                (let (v93 i1) (neq v84 0))
                (condbr v93 (block 2 v7 v84) (block 9)))

            (block 8
                (let (v56 u32) (cast v7))
                (let (v57 u32) (add.checked v56 12))
                (let (v58 u32) (mod.unchecked v57 2))
                (assertz v58)
                (let (v59 (ptr i32)) (inttoptr v57))
                (let (v60 i32) (load v59))
                (let (v61 u32) (cast v0))
                (let (v62 u32) (mod.unchecked v61 2))
                (assertz v62)
                (let (v63 (ptr i32)) (inttoptr v61))
                (store v63 v60)
                (br (block 6 v7)))

            (block 9
                (br (block 6 v7)))
        )

        (func (export #<wee_alloc::WeeAlloc as core::alloc::global::GlobalAlloc>::dealloc)
              (param i32) (param i32) (param i32) (param i32)
            (block 0 (param v0 i32) (param v1 i32) (param v2 i32) (param v3 i32)
                (let (v4 i32) (const.i32 0))
                (let (v5 i1) (eq v1 0))
                (let (v6 i32) (zext v5))
                (let (v7 i1) (neq v6 0))
                (condbr v7 (block 2) (block 3)))

            (block 1
                (ret))

            (block 2
                (br (block 1)))

            (block 3
                (let (v8 i1) (eq v3 0))
                (let (v9 i32) (zext v8))
                (let (v10 i1) (neq v9 0))
                (condbr v10 (block 2) (block 4)))

            (block 4
                (let (v11 i32) (const.i32 0))
                (let (v12 u32) (cast v1))
                (let (v13 u32) (mod.unchecked v12 2))
                (assertz v13)
                (let (v14 (ptr i32)) (inttoptr v12))
                (store v14 v11)
                (let (v15 i32) (const.i32 -8))
                (let (v16 i32) (add.wrapping v1 v15))
                (let (v17 u32) (cast v16))
                (let (v18 u32) (mod.unchecked v17 2))
                (assertz v18)
                (let (v19 (ptr i32)) (inttoptr v17))
                (let (v20 i32) (load v19))
                (let (v21 i32) (const.i32 -2))
                (let (v22 i32) (band v20 v21))
                (let (v23 u32) (cast v16))
                (let (v24 u32) (mod.unchecked v23 2))
                (assertz v24)
                (let (v25 (ptr i32)) (inttoptr v23))
                (store v25 v22)
                (let (v26 u32) (cast v0))
                (let (v27 u32) (mod.unchecked v26 2))
                (assertz v27)
                (let (v28 (ptr i32)) (inttoptr v26))
                (let (v29 i32) (load v28))
                (let (v30 i32) (const.i32 4))
                (let (v31 i32) (add.wrapping v16 v30))
                (let (v32 u32) (cast v31))
                (let (v33 u32) (mod.unchecked v32 2))
                (assertz v33)
                (let (v34 (ptr i32)) (inttoptr v32))
                (let (v35 i32) (load v34))
                (let (v36 i32) (const.i32 -4))
                (let (v37 i32) (band v35 v36))
                (let (v38 i1) (eq v37 0))
                (let (v39 i32) (zext v38))
                (let (v40 i1) (neq v39 0))
                (condbr v40 (block 7 v20 v1 v29 v16 v0) (block 8)))

            (block 5 (param v109 i32) (param v113 i32)
                (let (v115 u32) (cast v109))
                (let (v116 u32) (mod.unchecked v115 2))
                (assertz v116)
                (let (v117 (ptr i32)) (inttoptr v115))
                (store v117 v113)
                (br (block 2)))

            (block 6 (param v108 i32) (param v112 i32)
                (br (block 5 v112 v108)))

            (block 7
                    (param v66 i32)
                    (param v85 i32)
                    (param v87 i32)
                    (param v101 i32)
                    (param v111 i32)
                (let (v67 i32) (const.i32 2))
                (let (v68 i32) (band v66 v67))
                (let (v69 i1) (neq v68 0))
                (condbr v69 (block 12 v85 v87 v111 v101) (block 13)))

            (block 8
                (let (v41 u32) (cast v37))
                (let (v42 (ptr u8)) (inttoptr v41))
                (let (v43 u8) (load v42))
                (let (v44 i32) (zext v43))
                (let (v45 i32) (const.i32 1))
                (let (v46 i32) (band v44 v45))
                (let (v47 i1) (neq v46 0))
                (condbr v47 (block 7 v20 v1 v29 v16 v0) (block 9)))

            (block 9
                (call #wee_alloc::neighbors::Neighbors<T>::remove v16)
                (let (v48 u32) (cast v16))
                (let (v49 (ptr u8)) (inttoptr v48))
                (let (v50 u8) (load v49))
                (let (v51 i32) (zext v50))
                (let (v52 i32) (const.i32 2))
                (let (v53 i32) (band v51 v52))
                (let (v54 i1) (eq v53 0))
                (let (v55 i32) (zext v54))
                (let (v56 i1) (neq v55 0))
                (condbr v56 (block 6 v29 v0) (block 10)))

            (block 10
                (let (v57 u32) (cast v37))
                (let (v58 u32) (mod.unchecked v57 2))
                (assertz v58)
                (let (v59 (ptr i32)) (inttoptr v57))
                (let (v60 i32) (load v59))
                (let (v61 i32) (const.i32 2))
                (let (v62 i32) (bor v60 v61))
                (let (v63 u32) (cast v37))
                (let (v64 u32) (mod.unchecked v63 2))
                (assertz v64)
                (let (v65 (ptr i32)) (inttoptr v63))
                (store v65 v62)
                (br (block 6 v29 v0)))

            (block 11
                (let (v91 u32) (cast v71))
                (let (v92 u32) (add.checked v91 8))
                (let (v93 u32) (mod.unchecked v92 2))
                (assertz v93)
                (let (v94 (ptr i32)) (inttoptr v92))
                (let (v95 i32) (load v94))
                (let (v96 i32) (const.i32 -4))
                (let (v97 i32) (band v95 v96))
                (let (v98 u32) (cast v85))
                (let (v99 u32) (mod.unchecked v98 2))
                (assertz v99)
                (let (v100 (ptr i32)) (inttoptr v98))
                (store v100 v97)
                (let (v102 i32) (const.i32 1))
                (let (v103 i32) (bor v101 v102))
                (let (v104 u32) (cast v71))
                (let (v105 u32) (add.checked v104 8))
                (let (v106 u32) (mod.unchecked v105 2))
                (assertz v106)
                (let (v107 (ptr i32)) (inttoptr v105))
                (store v107 v103)
                (br (block 6 v87 v111)))

            (block 12
                    (param v84 i32)
                    (param v86 i32)
                    (param v110 i32)
                    (param v114 i32)
                (let (v88 u32) (cast v84))
                (let (v89 u32) (mod.unchecked v88 2))
                (assertz v89)
                (let (v90 (ptr i32)) (inttoptr v88))
                (store v90 v86)
                (br (block 5 v110 v114)))

            (block 13
                (let (v70 i32) (const.i32 -4))
                (let (v71 i32) (band v66 v70))
                (let (v72 i1) (eq v71 0))
                (let (v73 i32) (zext v72))
                (let (v74 i1) (neq v73 0))
                (condbr v74 (block 12 v85 v87 v111 v101) (block 14)))

            (block 14
                (let (v75 u32) (cast v71))
                (let (v76 (ptr u8)) (inttoptr v75))
                (let (v77 u8) (load v76))
                (let (v78 i32) (zext v77))
                (let (v79 i32) (const.i32 1))
                (let (v80 i32) (band v78 v79))
                (let (v81 i1) (eq v80 0))
                (let (v82 i32) (zext v81))
                (let (v83 i1) (neq v82 0))
                (condbr v83 (block 11) (block 15)))

            (block 15
                (br (block 12 v85 v87 v111 v101)))
        )

        (func (export #miden_tx_kernel_sys::get_id)
              (result felt)
            (block 0
                (let (v1 felt) (call (#miden::account #get_id)))
                (br (block 1 v1)))

            (block 1 (param v0 felt)
                (ret v0))
        )

        (func (export #miden_tx_kernel_sys::get_inputs)
              (param i32)
            (block 0 (param v0 i32)
                (let (v1 i32) (const.i32 0))
                (let (v2 i32) (global.load i32 (global.symbol #__stack_pointer)))
                (let (v3 i32) (const.i32 16))
                (let (v4 i32) (sub.wrapping v2 v3))
                (let (v5 (ptr i32)) (global.symbol #__stack_pointer))
                (store v5 v4)
                (let (v6 i32) (const.i32 4))
                (let (v7 i32) (add.wrapping v4 v6))
                (let (v8 i32) (const.i32 256))
                (let (v9 i32) (const.i32 0))
                (call #alloc::raw_vec::RawVec<T,A>::try_allocate_in v7 v8 v9)
                (let (v10 u32) (cast v4))
                (let (v11 u32) (add.checked v10 8))
                (let (v12 u32) (mod.unchecked v11 2))
                (assertz v12)
                (let (v13 (ptr i32)) (inttoptr v11))
                (let (v14 i32) (load v13))
                (let (v15 u32) (cast v4))
                (let (v16 u32) (add.checked v15 4))
                (let (v17 u32) (mod.unchecked v16 2))
                (assertz v17)
                (let (v18 (ptr i32)) (inttoptr v16))
                (let (v19 i32) (load v18))
                (let (v20 i1) (eq v19 0))
                (let (v21 i32) (zext v20))
                (let (v22 i1) (neq v21 0))
                (condbr v22 (block 2) (block 3)))

            (block 1
                (ret))

            (block 2
                (let (v28 u32) (cast v4))
                (let (v29 u32) (add.checked v28 12))
                (let (v30 u32) (mod.unchecked v29 2))
                (assertz v30)
                (let (v31 (ptr i32)) (inttoptr v29))
                (let (v32 i32) (load v31))
                (let [(v33 i32) (v34 felt)] (call (#miden::note #get_inputs) v32))
                (let (v35 i32) (const.i32 0))
                (let (v36 u32) (cast v0))
                (let (v37 u32) (add.checked v36 8))
                (let (v38 u32) (mod.unchecked v37 2))
                (assertz v38)
                (let (v39 (ptr i32)) (inttoptr v37))
                (store v39 v35)
                (let (v40 u32) (cast v0))
                (let (v41 u32) (add.checked v40 4))
                (let (v42 u32) (mod.unchecked v41 2))
                (assertz v42)
                (let (v43 (ptr i32)) (inttoptr v41))
                (store v43 v32)
                (let (v44 u32) (cast v0))
                (let (v45 u32) (mod.unchecked v44 2))
                (assertz v45)
                (let (v46 (ptr i32)) (inttoptr v44))
                (store v46 v14)
                (let (v47 i32) (const.i32 16))
                (let (v48 i32) (add.wrapping v4 v47))
                (let (v49 (ptr i32)) (global.symbol #__stack_pointer))
                (store v49 v48)
                (br (block 1)))

            (block 3
                (let (v23 u32) (cast v4))
                (let (v24 u32) (add.checked v23 12))
                (let (v25 u32) (mod.unchecked v24 2))
                (assertz v25)
                (let (v26 (ptr i32)) (inttoptr v24))
                (let (v27 i32) (load v26))
                (call #alloc::raw_vec::handle_error v14 v27)
                (unreachable))
        )

        (func (export #miden_tx_kernel_sys::add_asset)
              (param i32) (param i32)
            (block 0 (param v0 i32) (param v1 i32)
                (let (v2 u32) (cast v1))
                (let (v3 u32) (mod.unchecked v2 2))
                (assertz v3)
                (let (v4 (ptr felt)) (inttoptr v2))
                (let (v5 felt) (load v4))
                (let (v6 u32) (cast v1))
                (let (v7 u32) (add.checked v6 4))
                (let (v8 u32) (mod.unchecked v7 2))
                (assertz v8)
                (let (v9 (ptr felt)) (inttoptr v7))
                (let (v10 felt) (load v9))
                (let (v11 u32) (cast v1))
                (let (v12 u32) (add.checked v11 8))
                (let (v13 u32) (mod.unchecked v12 2))
                (assertz v13)
                (let (v14 (ptr felt)) (inttoptr v12))
                (let (v15 felt) (load v14))
                (let (v16 u32) (cast v1))
                (let (v17 u32) (add.checked v16 12))
                (let (v18 u32) (mod.unchecked v17 2))
                (assertz v18)
                (let (v19 (ptr felt)) (inttoptr v17))
                (let (v20 felt) (load v19))
                (let [(v21 felt) (v22 felt) (v23 felt) (v24 felt)] (call (#miden::account #add_asset) v5 v10 v15 v20))
                (let (v25 u32) (cast v0))
                (let (v26 (ptr felt)) (inttoptr v25))
                (store v26 v21)
                (let (v27 u32) (add.checked v25 8))
                (let (v28 (ptr felt)) (inttoptr v27))
                (store v28 v22)
                (let (v29 u32) (add.checked v25 16))
                (let (v30 (ptr felt)) (inttoptr v29))
                (store v30 v23)
                (let (v31 u32) (add.checked v25 24))
                (let (v32 (ptr felt)) (inttoptr v31))
                (store v32 v24)
                (br (block 1)))

            (block 1
                (ret))
        )

        (func (export #miden_tx_kernel_sys::remove_asset)
              (param i32) (param i32)
            (block 0 (param v0 i32) (param v1 i32)
                (let (v2 u32) (cast v1))
                (let (v3 u32) (mod.unchecked v2 2))
                (assertz v3)
                (let (v4 (ptr felt)) (inttoptr v2))
                (let (v5 felt) (load v4))
                (let (v6 u32) (cast v1))
                (let (v7 u32) (add.checked v6 4))
                (let (v8 u32) (mod.unchecked v7 2))
                (assertz v8)
                (let (v9 (ptr felt)) (inttoptr v7))
                (let (v10 felt) (load v9))
                (let (v11 u32) (cast v1))
                (let (v12 u32) (add.checked v11 8))
                (let (v13 u32) (mod.unchecked v12 2))
                (assertz v13)
                (let (v14 (ptr felt)) (inttoptr v12))
                (let (v15 felt) (load v14))
                (let (v16 u32) (cast v1))
                (let (v17 u32) (add.checked v16 12))
                (let (v18 u32) (mod.unchecked v17 2))
                (assertz v18)
                (let (v19 (ptr felt)) (inttoptr v17))
                (let (v20 felt) (load v19))
                (let [(v21 felt) (v22 felt) (v23 felt) (v24 felt)] (call (#miden::account #remove_asset) v5 v10 v15 v20))
                (let (v25 u32) (cast v0))
                (let (v26 (ptr felt)) (inttoptr v25))
                (store v26 v21)
                (let (v27 u32) (add.checked v25 8))
                (let (v28 (ptr felt)) (inttoptr v27))
                (store v28 v22)
                (let (v29 u32) (add.checked v25 16))
                (let (v30 (ptr felt)) (inttoptr v29))
                (store v30 v23)
                (let (v31 u32) (add.checked v25 24))
                (let (v32 (ptr felt)) (inttoptr v31))
                (store v32 v24)
                (br (block 1)))

            (block 1
                (ret))
        )

        (func (export #miden_tx_kernel_sys::create_note)
              (param i32) (param felt) (param felt) (param i32) (result felt)
            (block 0
                    (param v0 i32)
                    (param v1 felt)
                    (param v2 felt)
                    (param v3 i32)
                (let (v5 u32) (cast v0))
                (let (v6 u32) (mod.unchecked v5 2))
                (assertz v6)
                (let (v7 (ptr felt)) (inttoptr v5))
                (let (v8 felt) (load v7))
                (let (v9 u32) (cast v0))
                (let (v10 u32) (add.checked v9 4))
                (let (v11 u32) (mod.unchecked v10 2))
                (assertz v11)
                (let (v12 (ptr felt)) (inttoptr v10))
                (let (v13 felt) (load v12))
                (let (v14 u32) (cast v0))
                (let (v15 u32) (add.checked v14 8))
                (let (v16 u32) (mod.unchecked v15 2))
                (assertz v16)
                (let (v17 (ptr felt)) (inttoptr v15))
                (let (v18 felt) (load v17))
                (let (v19 u32) (cast v0))
                (let (v20 u32) (add.checked v19 12))
                (let (v21 u32) (mod.unchecked v20 2))
                (assertz v21)
                (let (v22 (ptr felt)) (inttoptr v20))
                (let (v23 felt) (load v22))
                (let (v24 u32) (cast v3))
                (let (v25 u32) (mod.unchecked v24 2))
                (assertz v25)
                (let (v26 (ptr felt)) (inttoptr v24))
                (let (v27 felt) (load v26))
                (let (v28 u32) (cast v3))
                (let (v29 u32) (add.checked v28 4))
                (let (v30 u32) (mod.unchecked v29 2))
                (assertz v30)
                (let (v31 (ptr felt)) (inttoptr v29))
                (let (v32 felt) (load v31))
                (let (v33 u32) (cast v3))
                (let (v34 u32) (add.checked v33 8))
                (let (v35 u32) (mod.unchecked v34 2))
                (assertz v35)
                (let (v36 (ptr felt)) (inttoptr v34))
                (let (v37 felt) (load v36))
                (let (v38 u32) (cast v3))
                (let (v39 u32) (add.checked v38 12))
                (let (v40 u32) (mod.unchecked v39 2))
                (assertz v40)
                (let (v41 (ptr felt)) (inttoptr v39))
                (let (v42 felt) (load v41))
                (let (v43 felt) (call (#miden::tx #create_note) v8 v13 v18 v23 v1 v2 v27 v32 v37 v42))
                (br (block 1 v43)))

            (block 1 (param v4 felt)
                (ret v4))
        )

        (func (export #alloc::vec::Vec<T>::with_capacity)
              (param i32) (param i32)
            (block 0 (param v0 i32) (param v1 i32)
                (let (v2 i32) (const.i32 0))
                (let (v3 i32) (global.load i32 (global.symbol #__stack_pointer)))
                (let (v4 i32) (const.i32 16))
                (let (v5 i32) (sub.wrapping v3 v4))
                (let (v6 (ptr i32)) (global.symbol #__stack_pointer))
                (store v6 v5)
                (let (v7 i32) (const.i32 4))
                (let (v8 i32) (add.wrapping v5 v7))
                (let (v9 i32) (const.i32 0))
                (call #alloc::raw_vec::RawVec<T,A>::try_allocate_in v8 v1 v9)
                (let (v10 u32) (cast v5))
                (let (v11 u32) (add.checked v10 8))
                (let (v12 u32) (mod.unchecked v11 2))
                (assertz v12)
                (let (v13 (ptr i32)) (inttoptr v11))
                (let (v14 i32) (load v13))
                (let (v15 u32) (cast v5))
                (let (v16 u32) (add.checked v15 4))
                (let (v17 u32) (mod.unchecked v16 2))
                (assertz v17)
                (let (v18 (ptr i32)) (inttoptr v16))
                (let (v19 i32) (load v18))
                (let (v20 i1) (eq v19 0))
                (let (v21 i32) (zext v20))
                (let (v22 i1) (neq v21 0))
                (condbr v22 (block 2) (block 3)))

            (block 1
                (ret))

            (block 2
                (let (v28 u32) (cast v5))
                (let (v29 u32) (add.checked v28 12))
                (let (v30 u32) (mod.unchecked v29 2))
                (assertz v30)
                (let (v31 (ptr i32)) (inttoptr v29))
                (let (v32 i32) (load v31))
                (let (v33 i32) (const.i32 0))
                (let (v34 u32) (cast v0))
                (let (v35 u32) (add.checked v34 8))
                (let (v36 u32) (mod.unchecked v35 2))
                (assertz v36)
                (let (v37 (ptr i32)) (inttoptr v35))
                (store v37 v33)
                (let (v38 u32) (cast v0))
                (let (v39 u32) (add.checked v38 4))
                (let (v40 u32) (mod.unchecked v39 2))
                (assertz v40)
                (let (v41 (ptr i32)) (inttoptr v39))
                (store v41 v32)
                (let (v42 u32) (cast v0))
                (let (v43 u32) (mod.unchecked v42 2))
                (assertz v43)
                (let (v44 (ptr i32)) (inttoptr v42))
                (store v44 v14)
                (let (v45 i32) (const.i32 16))
                (let (v46 i32) (add.wrapping v5 v45))
                (let (v47 (ptr i32)) (global.symbol #__stack_pointer))
                (store v47 v46)
                (br (block 1)))

            (block 3
                (let (v23 u32) (cast v5))
                (let (v24 u32) (add.checked v23 12))
                (let (v25 u32) (mod.unchecked v24 2))
                (assertz v25)
                (let (v26 (ptr i32)) (inttoptr v24))
                (let (v27 i32) (load v26))
                (call #alloc::raw_vec::handle_error v14 v27)
                (unreachable))
        )

        (func (export #alloc::raw_vec::RawVec<T,A>::try_allocate_in)
              (param i32) (param i32) (param i32)
            (block 0 (param v0 i32) (param v1 i32) (param v2 i32)
                (let (v3 i32) (const.i32 0))
                (let (v4 i1) (neq v1 0))
                (condbr v4 (block 3) (block 4)))

            (block 1
                (ret))

            (block 2 (param v62 i32) (param v64 i32)
                (let (v65 u32) (cast v62))
                (let (v66 u32) (mod.unchecked v65 2))
                (assertz v66)
                (let (v67 (ptr i32)) (inttoptr v65))
                (store v67 v64)
                (br (block 1)))

            (block 3
                (let (v11 i32) (const.i32 536870912))
                (let (v12 u32) (bitcast v1))
                (let (v13 u32) (bitcast v11))
                (let (v14 i1) (lt v12 v13))
                (let (v15 i32) (sext v14))
                (let (v16 i1) (neq v15 0))
                (condbr v16 (block 6) (block 7)))

            (block 4
                (let (v5 i64) (const.i64 17179869184))
                (let (v6 u32) (cast v0))
                (let (v7 u32) (add.checked v6 4))
                (let (v8 u32) (mod.unchecked v7 2))
                (assertz v8)
                (let (v9 (ptr i64)) (inttoptr v7))
                (store v9 v5)
                (let (v10 i32) (const.i32 0))
                (br (block 2 v0 v10)))

            (block 5 (param v63 i32)
                (let (v61 i32) (const.i32 1))
                (br (block 2 v63 v61)))

            (block 6
                (let (v22 i32) (const.i32 2))
                (let (v23 u32) (bitcast v22))
                (let (v24 i32) (shl.wrapping v1 v23))
                (let (v25 i1) (neq v2 0))
                (condbr v25 (block 9) (block 10)))

            (block 7
                (let (v17 i32) (const.i32 0))
                (let (v18 u32) (cast v0))
                (let (v19 u32) (add.checked v18 4))
                (let (v20 u32) (mod.unchecked v19 2))
                (assertz v20)
                (let (v21 (ptr i32)) (inttoptr v19))
                (store v21 v17)
                (br (block 5 v0)))

            (block 8
                    (param v36 i32)
                    (param v40 i32)
                    (param v45 i32)
                    (param v51 i32)
                (let (v37 i1) (eq v36 0))
                (let (v38 i32) (zext v37))
                (let (v39 i1) (neq v38 0))
                (condbr v39 (block 11) (block 12)))

            (block 9
                (let (v34 i32) (const.i32 4))
                (let (v35 i32) (call #__rust_alloc_zeroed v24 v34))
                (br (block 8 v35 v0 v1 v24)))

            (block 10
                (let (v26 i32) (const.i32 0))
                (let (v27 u32) (cast v26))
                (let (v28 u32) (add.checked v27 1048580))
                (let (v29 (ptr u8)) (inttoptr v28))
                (let (v30 u8) (load v29))
                (let (v31 i32) (zext v30))
                (let (v32 i32) (const.i32 4))
                (let (v33 i32) (call #__rust_alloc v24 v32))
                (br (block 8 v33 v0 v1 v24)))

            (block 11
                (let (v52 u32) (cast v40))
                (let (v53 u32) (add.checked v52 8))
                (let (v54 u32) (mod.unchecked v53 2))
                (assertz v54)
                (let (v55 (ptr i32)) (inttoptr v53))
                (store v55 v51)
                (let (v56 i32) (const.i32 4))
                (let (v57 u32) (cast v40))
                (let (v58 u32) (add.checked v57 4))
                (let (v59 u32) (mod.unchecked v58 2))
                (assertz v59)
                (let (v60 (ptr i32)) (inttoptr v58))
                (store v60 v56)
                (br (block 5 v40)))

            (block 12
                (let (v41 u32) (cast v40))
                (let (v42 u32) (add.checked v41 8))
                (let (v43 u32) (mod.unchecked v42 2))
                (assertz v43)
                (let (v44 (ptr i32)) (inttoptr v42))
                (store v44 v36)
                (let (v46 u32) (cast v40))
                (let (v47 u32) (add.checked v46 4))
                (let (v48 u32) (mod.unchecked v47 2))
                (assertz v48)
                (let (v49 (ptr i32)) (inttoptr v47))
                (store v49 v45)
                (let (v50 i32) (const.i32 0))
                (br (block 2 v40 v50)))
        )

        (func (export #miden_stdlib_sys::stdlib::mem::pipe_words_to_memory)
              (param i32) (param felt)
            (block 0 (param v0 i32) (param v1 felt)
                (let (v2 i32) (const.i32 0))
                (let (v3 i32) (global.load i32 (global.symbol #__stack_pointer)))
                (let (v4 i32) (const.i32 32))
                (let (v5 i32) (sub.wrapping v3 v4))
                (let (v6 (ptr i32)) (global.symbol #__stack_pointer))
                (store v6 v5)
                (let (v7 i64) (cast v1))
                (let (v8 i32) (trunc v7))
                (let (v9 i32) (const.i32 2))
                (let (v10 u32) (bitcast v9))
                (let (v11 i32) (shl.wrapping v8 v10))
                (call #alloc::vec::Vec<T>::with_capacity v5 v11)
                (let (v12 u32) (cast v5))
                (let (v13 u32) (add.checked v12 4))
                (let (v14 u32) (mod.unchecked v13 2))
                (assertz v14)
                (let (v15 (ptr i32)) (inttoptr v13))
                (let (v16 i32) (load v15))
                (let (v17 i32) (const.i32 12))
                (let (v18 i32) (add.wrapping v5 v17))
                (let [(v19 felt) (v20 felt) (v21 felt) (v22 felt) (v23 i32)] (call (#std::mem #pipe_words_to_memory) v1 v16))
                (let (v24 u32) (cast v18))
                (let (v25 (ptr felt)) (inttoptr v24))
                (store v25 v19)
                (let (v26 u32) (add.checked v24 8))
                (let (v27 (ptr felt)) (inttoptr v26))
                (store v27 v20)
                (let (v28 u32) (add.checked v24 16))
                (let (v29 (ptr felt)) (inttoptr v28))
                (store v29 v21)
                (let (v30 u32) (add.checked v24 24))
                (let (v31 (ptr felt)) (inttoptr v30))
                (store v31 v22)
                (let (v32 u32) (add.checked v24 32))
                (let (v33 (ptr i32)) (inttoptr v32))
                (store v33 v23)
                (let (v34 i32) (const.i32 8))
                (let (v35 i32) (add.wrapping v0 v34))
                (let (v36 i32) (const.i32 12))
                (let (v37 i32) (add.wrapping v5 v36))
                (let (v38 i32) (const.i32 8))
                (let (v39 i32) (add.wrapping v37 v38))
                (let (v40 u32) (cast v39))
                (let (v41 u32) (mod.unchecked v40 2))
                (assertz v41)
                (let (v42 (ptr i64)) (inttoptr v40))
                (let (v43 i64) (load v42))
                (let (v44 u32) (cast v35))
                (let (v45 u32) (mod.unchecked v44 2))
                (assertz v45)
                (let (v46 (ptr i64)) (inttoptr v44))
                (store v46 v43)
                (let (v47 u32) (cast v5))
                (let (v48 u32) (add.checked v47 12))
                (let (v49 u32) (mod.unchecked v48 2))
                (assertz v49)
                (let (v50 (ptr i64)) (inttoptr v48))
                (let (v51 i64) (load v50))
                (let (v52 u32) (cast v0))
                (let (v53 u32) (mod.unchecked v52 2))
                (assertz v53)
                (let (v54 (ptr i64)) (inttoptr v52))
                (store v54 v51)
                (let (v55 i32) (const.i32 24))
                (let (v56 i32) (add.wrapping v0 v55))
                (let (v57 i32) (const.i32 8))
                (let (v58 i32) (add.wrapping v5 v57))
                (let (v59 u32) (cast v58))
                (let (v60 u32) (mod.unchecked v59 2))
                (assertz v60)
                (let (v61 (ptr i32)) (inttoptr v59))
                (let (v62 i32) (load v61))
                (let (v63 u32) (cast v56))
                (let (v64 u32) (mod.unchecked v63 2))
                (assertz v64)
                (let (v65 (ptr i32)) (inttoptr v63))
                (store v65 v62)
                (let (v66 u32) (cast v5))
                (let (v67 u32) (mod.unchecked v66 2))
                (assertz v67)
                (let (v68 (ptr i64)) (inttoptr v66))
                (let (v69 i64) (load v68))
                (let (v70 u32) (cast v0))
                (let (v71 u32) (add.checked v70 16))
                (let (v72 u32) (mod.unchecked v71 2))
                (assertz v72)
                (let (v73 (ptr i64)) (inttoptr v71))
                (store v73 v69)
                (let (v74 i32) (const.i32 32))
                (let (v75 i32) (add.wrapping v5 v74))
                (let (v76 (ptr i32)) (global.symbol #__stack_pointer))
                (store v76 v75)
                (br (block 1)))

            (block 1
                (ret))
        )

        (func (export #miden_stdlib_sys::stdlib::mem::pipe_double_words_to_memory)
              (param i32) (param felt)
            (block 0 (param v0 i32) (param v1 felt)
                (let (v2 i32) (const.i32 0))
                (let (v3 i32) (global.load i32 (global.symbol #__stack_pointer)))
                (let (v4 i32) (const.i32 64))
                (let (v5 i32) (sub.wrapping v3 v4))
                (let (v6 (ptr i32)) (global.symbol #__stack_pointer))
                (store v6 v5)
                (let (v7 i64) (cast v1))
                (let (v8 i32) (trunc v7))
                (let (v9 i32) (const.i32 2))
                (let (v10 u32) (bitcast v9))
                (let (v11 i32) (shl.wrapping v8 v10))
                (call #alloc::vec::Vec<T>::with_capacity v5 v11)
                (let (v12 u32) (cast v5))
                (let (v13 u32) (add.checked v12 4))
                (let (v14 u32) (mod.unchecked v13 2))
                (assertz v14)
                (let (v15 (ptr i32)) (inttoptr v13))
                (let (v16 i32) (load v15))
                (let (v17 i64) (const.i64 0))
                (let (v18 felt) (cast v17))
                (let (v19 i32) (const.i32 4))
                (let (v20 u32) (bitcast v19))
                (let (v21 i32) (shl.wrapping v8 v20))
                (let (v22 i32) (add.wrapping v16 v21))
                (let (v23 i32) (const.i32 12))
                (let (v24 i32) (add.wrapping v5 v23))
                (let [(v25 felt) (v26 felt) (v27 felt) (v28 felt) (v29 felt) (v30 felt) (v31 felt) (v32 felt) (v33 felt) (v34 felt) (v35 felt) (v36 felt) (v37 i32)] (call (#std::mem #pipe_double_words_to_memory) v18 v18 v18 v18 v18 v18 v18 v18 v18 v18 v18 v18 v16 v22))
                (let (v38 u32) (cast v24))
                (let (v39 (ptr felt)) (inttoptr v38))
                (store v39 v25)
                (let (v40 u32) (add.checked v38 8))
                (let (v41 (ptr felt)) (inttoptr v40))
                (store v41 v26)
                (let (v42 u32) (add.checked v38 16))
                (let (v43 (ptr felt)) (inttoptr v42))
                (store v43 v27)
                (let (v44 u32) (add.checked v38 24))
                (let (v45 (ptr felt)) (inttoptr v44))
                (store v45 v28)
                (let (v46 u32) (add.checked v38 32))
                (let (v47 (ptr felt)) (inttoptr v46))
                (store v47 v29)
                (let (v48 u32) (add.checked v38 40))
                (let (v49 (ptr felt)) (inttoptr v48))
                (store v49 v30)
                (let (v50 u32) (add.checked v38 48))
                (let (v51 (ptr felt)) (inttoptr v50))
                (store v51 v31)
                (let (v52 u32) (add.checked v38 56))
                (let (v53 (ptr felt)) (inttoptr v52))
                (store v53 v32)
                (let (v54 u32) (add.checked v38 64))
                (let (v55 (ptr felt)) (inttoptr v54))
                (store v55 v33)
                (let (v56 u32) (add.checked v38 72))
                (let (v57 (ptr felt)) (inttoptr v56))
                (store v57 v34)
                (let (v58 u32) (add.checked v38 80))
                (let (v59 (ptr felt)) (inttoptr v58))
                (store v59 v35)
                (let (v60 u32) (add.checked v38 88))
                (let (v61 (ptr felt)) (inttoptr v60))
                (store v61 v36)
                (let (v62 u32) (add.checked v38 96))
                (let (v63 (ptr i32)) (inttoptr v62))
                (store v63 v37)
                (let (v64 i32) (const.i32 8))
                (let (v65 i32) (add.wrapping v0 v64))
                (let (v66 i32) (const.i32 12))
                (let (v67 i32) (add.wrapping v5 v66))
                (let (v68 i32) (const.i32 24))
                (let (v69 i32) (add.wrapping v67 v68))
                (let (v70 u32) (cast v69))
                (let (v71 u32) (mod.unchecked v70 2))
                (assertz v71)
                (let (v72 (ptr i64)) (inttoptr v70))
                (let (v73 i64) (load v72))
                (let (v74 u32) (cast v65))
                (let (v75 u32) (mod.unchecked v74 2))
                (assertz v75)
                (let (v76 (ptr i64)) (inttoptr v74))
                (store v76 v73)
                (let (v77 u32) (cast v5))
                (let (v78 u32) (add.checked v77 28))
                (let (v79 u32) (mod.unchecked v78 2))
                (assertz v79)
                (let (v80 (ptr i64)) (inttoptr v78))
                (let (v81 i64) (load v80))
                (let (v82 u32) (cast v0))
                (let (v83 u32) (mod.unchecked v82 2))
                (assertz v83)
                (let (v84 (ptr i64)) (inttoptr v82))
                (store v84 v81)
                (let (v85 i32) (const.i32 24))
                (let (v86 i32) (add.wrapping v0 v85))
                (let (v87 i32) (const.i32 8))
                (let (v88 i32) (add.wrapping v5 v87))
                (let (v89 u32) (cast v88))
                (let (v90 u32) (mod.unchecked v89 2))
                (assertz v90)
                (let (v91 (ptr i32)) (inttoptr v89))
                (let (v92 i32) (load v91))
                (let (v93 u32) (cast v86))
                (let (v94 u32) (mod.unchecked v93 2))
                (assertz v94)
                (let (v95 (ptr i32)) (inttoptr v93))
                (store v95 v92)
                (let (v96 u32) (cast v5))
                (let (v97 u32) (mod.unchecked v96 2))
                (assertz v97)
                (let (v98 (ptr i64)) (inttoptr v96))
                (let (v99 i64) (load v98))
                (let (v100 u32) (cast v0))
                (let (v101 u32) (add.checked v100 16))
                (let (v102 u32) (mod.unchecked v101 2))
                (assertz v102)
                (let (v103 (ptr i64)) (inttoptr v101))
                (store v103 v99)
                (let (v104 i32) (const.i32 64))
                (let (v105 i32) (add.wrapping v5 v104))
                (let (v106 (ptr i32)) (global.symbol #__stack_pointer))
                (store v106 v105)
                (br (block 1)))

            (block 1
                (ret))
        )

        (func (export #dummy) 
            (block 0
                (br (block 1)))

            (block 1
                (ret))
        )

        (func (export #__wasm_call_dtors) 
            (block 0
                (call #dummy)
                (call #dummy)
                (br (block 1)))

            (block 1
                (ret))
        )

        (func (export #alloc::raw_vec::handle_error)
              (param i32) (param i32)
            (block 0 (param v0 i32) (param v1 i32)
                (unreachable))

            (block 1)
        )

        (func (export #get_wallet_magic_number.command_export) (result felt)
            (block 0
                (let (v1 felt) (call #get_wallet_magic_number))
                (call #__wasm_call_dtors)
                (br (block 1 v1)))

            (block 1 (param v0 felt)
                (ret v0))
        )

        (func (export #test_add_asset.command_export) (result felt)
            (block 0
                (let (v1 felt) (call #test_add_asset))
                (call #__wasm_call_dtors)
                (br (block 1 v1)))

            (block 1 (param v0 felt)
                (ret v0))
        )

        (func (export #test_felt_ops_smoke.command_export)
              (param felt) (param felt) (result felt)
            (block 0 (param v0 felt) (param v1 felt)
                (let (v3 felt) (call #test_felt_ops_smoke v0 v1))
                (call #__wasm_call_dtors)
                (br (block 1 v3)))

            (block 1 (param v2 felt)
                (ret v2))
        )

        (func (export #note_script.command_export) (result felt)
            (block 0
                (let (v1 felt) (call #note_script))
                (call #__wasm_call_dtors)
                (br (block 1 v1)))

            (block 1 (param v0 felt)
                (ret v0))
        )

        (func (export #test_blake3_hash_1to1.command_export)
              (param i32) (param i32)
            (block 0 (param v0 i32) (param v1 i32)
                (call #test_blake3_hash_1to1 v0 v1)
                (call #__wasm_call_dtors)
                (br (block 1)))

            (block 1
                (ret))
        )

        (func (export #test_blake3_hash_2to1.command_export)
              (param i32) (param i32)
            (block 0 (param v0 i32) (param v1 i32)
                (call #test_blake3_hash_2to1 v0 v1)
                (call #__wasm_call_dtors)
                (br (block 1)))

            (block 1
                (ret))
        )

        (func (export #test_rpo_falcon512_verify.command_export)
              (param i32) (param i32)
            (block 0 (param v0 i32) (param v1 i32)
                (call #test_rpo_falcon512_verify v0 v1)
                (call #__wasm_call_dtors)
                (br (block 1)))

            (block 1
                (ret))
        )

        (func (export #test_pipe_words_to_memory.command_export)
              (param i32) (param felt)
            (block 0 (param v0 i32) (param v1 felt)
                (call #test_pipe_words_to_memory v0 v1)
                (call #__wasm_call_dtors)
                (br (block 1)))

            (block 1
                (ret))
        )

        (func (export #test_pipe_double_words_to_memory.command_export)
              (param i32) (param felt)
            (block 0 (param v0 i32) (param v1 felt)
                (call #test_pipe_double_words_to_memory v0 v1)
                (call #__wasm_call_dtors)
                (br (block 1)))

            (block 1
                (ret))
        )

        (func (export #test_remove_asset.command_export)
              (param i32) (result felt)
            (block 0 (param v0 i32)
                (let (v2 felt) (call #test_remove_asset v0))
                (call #__wasm_call_dtors)
                (br (block 1 v2)))

            (block 1 (param v1 felt)
                (ret v1))
        )

        (func (export #test_create_note.command_export)
              (param i32) (param felt) (param felt) (param i32) (result felt)
            (block 0
                    (param v0 i32)
                    (param v1 felt)
                    (param v2 felt)
                    (param v3 i32)
                (let (v5 felt) (call #test_create_note v0 v1 v2 v3))
                (call #__wasm_call_dtors)
                (br (block 1 v5)))

            (block 1 (param v4 felt)
                (ret v4))
        )

        ;; Imports
        (func (import #miden::account #add_asset)
              (param felt) (param felt) (param felt) (param felt) (result felt felt felt felt))
        (func (import #miden::account #get_id) (result felt))
        (func (import #miden::account #remove_asset)
              (param felt) (param felt) (param felt) (param felt) (result felt felt felt felt))
        (func (import #miden::note #get_inputs) (param i32) (result i32 felt))
        (func (import #miden::tx #create_note)
              (param felt) (param felt) (param felt) (param felt) (param felt) (param felt) (param felt) (param felt) (param felt) (param felt) (result felt))
        (func (import #std::crypto::dsa::rpo_falcon512 #rpo_falcon512_verify)
              (param felt) (param felt) (param felt) (param felt) (param felt) (param felt) (param felt) (param felt))
        (func (import #std::crypto::hashes::blake3 #hash_1to1)
              (param i32) (param i32) (param i32) (param i32) (param i32) (param i32) (param i32) (param i32) (result i32 i32 i32 i32 i32 i32 i32 i32))
        (func (import #std::crypto::hashes::blake3 #hash_2to1)
              (param i32) (param i32) (param i32) (param i32) (param i32) (param i32) (param i32) (param i32) (param i32) (param i32) (param i32) (param i32) (param i32) (param i32) (param i32) (param i32) (result i32 i32 i32 i32 i32 i32 i32 i32))
        (func (import #std::mem #pipe_double_words_to_memory)
              (param felt) (param felt) (param felt) (param felt) (param felt) (param felt) (param felt) (param felt) (param felt) (param felt) (param felt) (param felt) (param i32) (param i32) (result felt felt felt felt felt felt felt felt felt felt felt felt i32))
        (func (import #std::mem #pipe_words_to_memory)
              (param felt) (param i32) (result felt felt felt felt i32))
    )

)
