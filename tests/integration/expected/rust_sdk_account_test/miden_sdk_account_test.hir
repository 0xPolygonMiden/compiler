(component 
    ;; Component Imports
    (lower ( (type (func (abi canon)  (param felt) (param felt) (param felt) (param felt) (result felt felt felt felt)))) (#miden:core-import/account@1.0.0 #add-asset)
    (lower ( (type (func (abi canon)  (result felt)))) (#miden:core-import/account@1.0.0 #get-id)
    (lower ( (type (func (abi canon)  (param felt) (param felt) (param felt) (param felt) (result felt felt felt felt)))) (#miden:core-import/account@1.0.0 #remove-asset)
    (lower ( (type (func (abi canon)  (param i32) (result i32 i32)))) (#miden:core-import/note@1.0.0 #get-inputs)
    (lower ( (type (func (abi canon)  (param felt) (param felt) (param felt) (param felt) (param felt) (param felt) (param felt) (param felt)))) (#miden:core-import/stdlib-crypto-dsa@1.0.0 #rpo-falcon512-verify)
    (lower ( (type (func (abi canon)  (param i32) (param i32) (param i32) (param i32) (param i32) (param i32) (param i32) (param i32) (result i32 i32 i32 i32 i32 i32 i32 i32)))) (#miden:core-import/stdlib-crypto-hashes@1.0.0 #blake3-hash-one-to-one)
    (lower ( (type (func (abi canon)  (param i32) (param i32) (param i32) (param i32) (param i32) (param i32) (param i32) (param i32) (param i32) (param i32) (param i32) (param i32) (param i32) (param i32) (param i32) (param i32) (result i32 i32 i32 i32 i32 i32 i32 i32)))) (#miden:core-import/stdlib-crypto-hashes@1.0.0 #blake3-hash-two-to-one)
    (lower ( (type (func (abi canon)  (param felt) (param felt) (param felt) (param felt) (param felt) (param felt) (param felt) (param felt) (param felt) (param felt) (param felt) (param felt) (param i32) (param i32) (result felt felt felt felt felt felt felt felt felt felt felt felt i32)))) (#miden:core-import/stdlib-mem@1.0.0 #pipe-double-words-to-memory)
    (lower ( (type (func (abi canon)  (param felt) (param i32) (result felt felt felt felt i32)))) (#miden:core-import/stdlib-mem@1.0.0 #pipe-words-to-memory)
    (lower ( (type (func (abi canon)  (param felt) (param felt) (param felt) (param felt) (param felt) (param felt) (param felt) (param felt) (param felt) (param felt) (result felt)))) (#miden:core-import/tx@1.0.0 #create-note)

    ;; Modules
    (module #miden_sdk_account_test
        ;; Constants
        (const (id 0) 0x00100000)

        ;; Global Variables
        (global (export #__stack_pointer) (id 0) (type i32) (const 0))

        ;; Functions
        (func (export #core::alloc::global::GlobalAlloc::alloc_zeroed)
              (param i32) (param i32) (param i32) (result i32)
            (block 0 (param v0 i32) (param v1 i32) (param v2 i32)
                (let (v4 i32) (call #<miden_sdk_alloc::BumpAlloc as core::alloc::global::GlobalAlloc>::alloc v0 v1 v2))
                (let (v5 i1) (eq v4 0))
                (let (v6 i32) (zext v5))
                (let (v7 i1) (neq v6 0))
                (condbr v7 (block 2 v4) (block 3)))

            (block 1 (param v3 i32)
                (ret v3))

            (block 2 (param v13 i32)
                (br (block 1 v13)))

            (block 3
                (let (v8 i32) (const.i32 0))
                (let (v9 u8) (trunc v8))
                (let (v10 u32) (bitcast v2))
                (let (v11 u32) (bitcast v4))
                (let (v12 (ptr u8)) (inttoptr v11))
                (memset v12 v10 v9)
                (br (block 2 v4)))
        )

        (func (export #get_wallet_magic_number) (result felt)
            (block 0
                (let (v1 felt) (const.felt 0))
                (let (v2 felt) (call #miden_base_sys::bindings::tx::get_id))
                (let (v3 i64) (const.i64 42))
                (let (v4 felt) (cast v3))
                (let (v5 felt) (add.unchecked v4 v2))
                (br (block 1 v5)))

            (block 1 (param v0 felt)
                (ret v0))
        )

        (func (export #test_add_asset) (result felt)
            (block 0
                (let (v1 i32) (const.i32 0))
                (let (v2 felt) (const.felt 0))
                (let (v3 i32) (global.load i32 (global.symbol #__stack_pointer)))
                (let (v4 i32) (const.i32 64))
                (let (v5 i32) (sub.wrapping v3 v4))
                (let (v6 i32) (const.i32 -32))
                (let (v7 i32) (band v5 v6))
                (let (v8 (ptr i32)) (global.symbol #__stack_pointer))
                (store v8 v7)
                (let (v9 i64) (const.i64 1))
                (let (v10 felt) (cast v9))
                (let (v11 i64) (const.i64 2))
                (let (v12 felt) (cast v11))
                (let (v13 i64) (const.i64 3))
                (let (v14 felt) (cast v13))
                (let (v15 i64) (const.i64 4))
                (let (v16 felt) (cast v15))
                (let (v17 u32) (bitcast v7))
                (let (v18 u32) (add.checked v17 12))
                (let (v19 u32) (mod.unchecked v18 4))
                (assertz 250 v19)
                (let (v20 (ptr felt)) (inttoptr v18))
                (store v20 v16)
                (let (v21 u32) (bitcast v7))
                (let (v22 u32) (add.checked v21 8))
                (let (v23 u32) (mod.unchecked v22 4))
                (assertz 250 v23)
                (let (v24 (ptr felt)) (inttoptr v22))
                (store v24 v14)
                (let (v25 u32) (bitcast v7))
                (let (v26 u32) (add.checked v25 4))
                (let (v27 u32) (mod.unchecked v26 4))
                (assertz 250 v27)
                (let (v28 (ptr felt)) (inttoptr v26))
                (store v28 v12)
                (let (v29 u32) (bitcast v7))
                (let (v30 u32) (mod.unchecked v29 4))
                (assertz 250 v30)
                (let (v31 (ptr felt)) (inttoptr v29))
                (store v31 v10)
                (let (v32 i32) (const.i32 32))
                (let (v33 i32) (add.wrapping v7 v32))
                (call #miden_base_sys::bindings::tx::add_asset v33 v7)
                (let (v34 u32) (bitcast v7))
                (let (v35 u32) (add.checked v34 32))
                (let (v36 u32) (mod.unchecked v35 4))
                (assertz 250 v36)
                (let (v37 (ptr felt)) (inttoptr v35))
                (let (v38 felt) (load v37))
                (let (v39 (ptr i32)) (global.symbol #__stack_pointer))
                (store v39 v3)
                (br (block 1 v38)))

            (block 1 (param v0 felt)
                (ret v0))
        )

        (func (export #test_felt_ops_smoke)
              (param felt) (param felt) (result felt)
            (block 0 (param v0 felt) (param v1 felt)
                (let (v3 i64) (const.i64 0))
                (let (v4 i64) (cast v0))
                (let (v5 i1) (gt v0 v1))
                (let (v6 i32) (cast v5))
                (let (v7 i1) (neq v6 0))
                (condbr v7 (block 7) (block 8)))

            (block 1 (param v2 felt)
                (ret v2))

            (block 2
                (let (v41 felt) (neg v0))
                (br (block 1 v41)))

            (block 3
                (assert.eq v1 v0)
                (let (v39 felt) (cast v4))
                (let (v40 felt) (add.unchecked v0 v39))
                (ret v40))

            (block 4
                (let (v38 felt) (div.unchecked v1 v0))
                (ret v38))

            (block 5
                (let (v36 felt) (pow2 v0))
                (let (v37 felt) (mul.unchecked v36 v1))
                (ret v37))

            (block 6
                (let (v34 felt) (exp v0 v1))
                (let (v35 felt) (sub.unchecked v34 v1))
                (ret v35))

            (block 7
                (let (v32 felt) (inv v0))
                (let (v33 felt) (add.unchecked v32 v1))
                (ret v33))

            (block 8
                (let (v8 i1) (lt v1 v0))
                (let (v9 i32) (cast v8))
                (let (v10 i1) (neq v9 0))
                (condbr v10 (block 6) (block 9)))

            (block 9
                (let (v11 i1) (lte v1 v0))
                (let (v12 i32) (cast v11))
                (let (v13 i1) (neq v12 0))
                (condbr v13 (block 5) (block 10)))

            (block 10
                (let (v14 i1) (gte v0 v1))
                (let (v15 i32) (cast v14))
                (let (v16 i1) (neq v15 0))
                (condbr v16 (block 4) (block 11)))

            (block 11
                (let (v17 i1) (eq v0 v1))
                (let (v18 i32) (cast v17))
                (let (v19 i32) (const.i32 1))
                (let (v20 i1) (eq v18 v19))
                (let (v21 i32) (zext v20))
                (let (v22 i1) (neq v21 0))
                (condbr v22 (block 3) (block 12)))

            (block 12
                (let (v23 i1) (eq v0 v1))
                (let (v24 i32) (cast v23))
                (let (v25 i32) (const.i32 1))
                (let (v26 i1) (neq v24 v25))
                (let (v27 i32) (zext v26))
                (let (v28 i1) (neq v27 0))
                (condbr v28 (block 2) (block 13)))

            (block 13
                (let (v29 i1) (is_odd v1))
                (let (v30 i32) (cast v29))
                (let (v31 i1) (neq v30 0))
                (condbr v31 (block 14) (block 15)))

            (block 14
                (assert v0)
                (ret v1))

            (block 15
                (assertz v1)
                (ret v0))
        )

        (func (export #note_script) (result felt)
            (block 0
                (let (v1 i32) (const.i32 0))
                (let (v2 felt) (const.felt 0))
                (let (v3 i32) (const.i32 0))
                (let (v4 i32) (global.load i32 (global.symbol #__stack_pointer)))
                (let (v5 i32) (const.i32 16))
                (let (v6 i32) (sub.wrapping v4 v5))
                (let (v7 (ptr i32)) (global.symbol #__stack_pointer))
                (store v7 v6)
                (let (v8 i64) (const.i64 0))
                (let (v9 felt) (cast v8))
                (let (v10 i32) (const.i32 4))
                (let (v11 i32) (add.wrapping v6 v10))
                (call #miden_base_sys::bindings::tx::get_inputs v11)
                (let (v12 u32) (bitcast v6))
                (let (v13 u32) (add.checked v12 12))
                (let (v14 u32) (mod.unchecked v13 4))
                (assertz 250 v14)
                (let (v15 (ptr i32)) (inttoptr v13))
                (let (v16 i32) (load v15))
                (let (v17 i32) (const.i32 2))
                (let (v18 u32) (bitcast v17))
                (let (v19 i32) (shl.wrapping v16 v18))
                (let (v20 u32) (bitcast v6))
                (let (v21 u32) (add.checked v20 8))
                (let (v22 u32) (mod.unchecked v21 4))
                (assertz 250 v22)
                (let (v23 (ptr i32)) (inttoptr v21))
                (let (v24 i32) (load v23))
                (br (block 2 v19 v6 v9 v24)))

            (block 1 (param v0 felt))

            (block 2
                    (param v26 i32)
                    (param v28 i32)
                    (param v32 felt)
                    (param v35 i32)
                (let (v27 i1) (neq v26 0))
                (condbr v27 (block 4) (block 5)))

            (block 3 (param v25 felt))

            (block 4
                (let (v33 i32) (const.i32 -4))
                (let (v34 i32) (add.wrapping v26 v33))
                (let (v36 u32) (bitcast v35))
                (let (v37 u32) (mod.unchecked v36 4))
                (assertz 250 v37)
                (let (v38 (ptr felt)) (inttoptr v36))
                (let (v39 felt) (load v38))
                (let (v40 felt) (add.unchecked v32 v39))
                (let (v41 i32) (const.i32 4))
                (let (v42 i32) (add.wrapping v35 v41))
                (br (block 2 v34 v28 v40 v42)))

            (block 5
                (let (v29 i32) (const.i32 16))
                (let (v30 i32) (add.wrapping v28 v29))
                (let (v31 (ptr i32)) (global.symbol #__stack_pointer))
                (store v31 v30)
                (ret v32))
        )

        (func (export #test_blake3_hash_1to1) (param i32) (param i32)
            (block 0 (param v0 i32) (param v1 i32)
                (let (v2 i32) (const.i32 0))
                (let (v3 i32) (global.load i32 (global.symbol #__stack_pointer)))
                (let (v4 i32) (const.i32 32))
                (let (v5 i32) (sub.wrapping v3 v4))
                (let (v6 i32) (const.i32 -32))
                (let (v7 i32) (band v5 v6))
                (let (v8 (ptr i32)) (global.symbol #__stack_pointer))
                (store v8 v7)
                (let (v9 u32) (bitcast v1))
                (let (v10 (ptr i32)) (inttoptr v9))
                (let (v11 i32) (load v10))
                (let (v12 u32) (bitcast v1))
                (let (v13 u32) (add.checked v12 4))
                (let (v14 (ptr i32)) (inttoptr v13))
                (let (v15 i32) (load v14))
                (let (v16 u32) (bitcast v1))
                (let (v17 u32) (add.checked v16 8))
                (let (v18 (ptr i32)) (inttoptr v17))
                (let (v19 i32) (load v18))
                (let (v20 u32) (bitcast v1))
                (let (v21 u32) (add.checked v20 12))
                (let (v22 (ptr i32)) (inttoptr v21))
                (let (v23 i32) (load v22))
                (let (v24 u32) (bitcast v1))
                (let (v25 u32) (add.checked v24 16))
                (let (v26 (ptr i32)) (inttoptr v25))
                (let (v27 i32) (load v26))
                (let (v28 u32) (bitcast v1))
                (let (v29 u32) (add.checked v28 20))
                (let (v30 (ptr i32)) (inttoptr v29))
                (let (v31 i32) (load v30))
                (let (v32 u32) (bitcast v1))
                (let (v33 u32) (add.checked v32 24))
                (let (v34 (ptr i32)) (inttoptr v33))
                (let (v35 i32) (load v34))
                (let (v36 u32) (bitcast v1))
                (let (v37 u32) (add.checked v36 28))
                (let (v38 (ptr i32)) (inttoptr v37))
                (let (v39 i32) (load v38))
                (let [(v40 i32) (v41 i32) (v42 i32) (v43 i32) (v44 i32) (v45 i32) (v46 i32) (v47 i32)] (call (#miden:core-import/stdlib-crypto-hashes@1.0.0 #blake3-hash-one-to-one) v11 v15 v19 v23 v27 v31 v35 v39))
                (let (v48 u32) (bitcast v7))
                (let (v49 (ptr i32)) (inttoptr v48))
                (store v49 v40)
                (let (v50 u32) (add.checked v48 4))
                (let (v51 (ptr i32)) (inttoptr v50))
                (store v51 v41)
                (let (v52 u32) (add.checked v48 8))
                (let (v53 (ptr i32)) (inttoptr v52))
                (store v53 v42)
                (let (v54 u32) (add.checked v48 12))
                (let (v55 (ptr i32)) (inttoptr v54))
                (store v55 v43)
                (let (v56 u32) (add.checked v48 16))
                (let (v57 (ptr i32)) (inttoptr v56))
                (store v57 v44)
                (let (v58 u32) (add.checked v48 20))
                (let (v59 (ptr i32)) (inttoptr v58))
                (store v59 v45)
                (let (v60 u32) (add.checked v48 24))
                (let (v61 (ptr i32)) (inttoptr v60))
                (store v61 v46)
                (let (v62 u32) (add.checked v48 28))
                (let (v63 (ptr i32)) (inttoptr v62))
                (store v63 v47)
                (let (v64 i32) (const.i32 24))
                (let (v65 i32) (add.wrapping v0 v64))
                (let (v66 u32) (bitcast v7))
                (let (v67 u32) (add.checked v66 24))
                (let (v68 u32) (mod.unchecked v67 8))
                (assertz 250 v68)
                (let (v69 (ptr i64)) (inttoptr v67))
                (let (v70 i64) (load v69))
                (let (v71 u32) (bitcast v65))
                (let (v72 (ptr i64)) (inttoptr v71))
                (store v72 v70)
                (let (v73 i32) (const.i32 16))
                (let (v74 i32) (add.wrapping v0 v73))
                (let (v75 u32) (bitcast v7))
                (let (v76 u32) (add.checked v75 16))
                (let (v77 u32) (mod.unchecked v76 8))
                (assertz 250 v77)
                (let (v78 (ptr i64)) (inttoptr v76))
                (let (v79 i64) (load v78))
                (let (v80 u32) (bitcast v74))
                (let (v81 (ptr i64)) (inttoptr v80))
                (store v81 v79)
                (let (v82 i32) (const.i32 8))
                (let (v83 i32) (add.wrapping v0 v82))
                (let (v84 u32) (bitcast v7))
                (let (v85 u32) (add.checked v84 8))
                (let (v86 u32) (mod.unchecked v85 8))
                (assertz 250 v86)
                (let (v87 (ptr i64)) (inttoptr v85))
                (let (v88 i64) (load v87))
                (let (v89 u32) (bitcast v83))
                (let (v90 (ptr i64)) (inttoptr v89))
                (store v90 v88)
                (let (v91 u32) (bitcast v7))
                (let (v92 u32) (mod.unchecked v91 8))
                (assertz 250 v92)
                (let (v93 (ptr i64)) (inttoptr v91))
                (let (v94 i64) (load v93))
                (let (v95 u32) (bitcast v0))
                (let (v96 (ptr i64)) (inttoptr v95))
                (store v96 v94)
                (let (v97 (ptr i32)) (global.symbol #__stack_pointer))
                (store v97 v3)
                (br (block 1)))

            (block 1
                (ret))
        )

        (func (export #test_blake3_hash_2to1) (param i32) (param i32)
            (block 0 (param v0 i32) (param v1 i32)
                (let (v2 u32) (bitcast v1))
                (let (v3 (ptr i32)) (inttoptr v2))
                (let (v4 i32) (load v3))
                (let (v5 u32) (bitcast v1))
                (let (v6 u32) (add.checked v5 4))
                (let (v7 (ptr i32)) (inttoptr v6))
                (let (v8 i32) (load v7))
                (let (v9 u32) (bitcast v1))
                (let (v10 u32) (add.checked v9 8))
                (let (v11 (ptr i32)) (inttoptr v10))
                (let (v12 i32) (load v11))
                (let (v13 u32) (bitcast v1))
                (let (v14 u32) (add.checked v13 12))
                (let (v15 (ptr i32)) (inttoptr v14))
                (let (v16 i32) (load v15))
                (let (v17 u32) (bitcast v1))
                (let (v18 u32) (add.checked v17 16))
                (let (v19 (ptr i32)) (inttoptr v18))
                (let (v20 i32) (load v19))
                (let (v21 u32) (bitcast v1))
                (let (v22 u32) (add.checked v21 20))
                (let (v23 (ptr i32)) (inttoptr v22))
                (let (v24 i32) (load v23))
                (let (v25 u32) (bitcast v1))
                (let (v26 u32) (add.checked v25 24))
                (let (v27 (ptr i32)) (inttoptr v26))
                (let (v28 i32) (load v27))
                (let (v29 u32) (bitcast v1))
                (let (v30 u32) (add.checked v29 28))
                (let (v31 (ptr i32)) (inttoptr v30))
                (let (v32 i32) (load v31))
                (let (v33 u32) (bitcast v1))
                (let (v34 u32) (add.checked v33 32))
                (let (v35 (ptr i32)) (inttoptr v34))
                (let (v36 i32) (load v35))
                (let (v37 u32) (bitcast v1))
                (let (v38 u32) (add.checked v37 36))
                (let (v39 (ptr i32)) (inttoptr v38))
                (let (v40 i32) (load v39))
                (let (v41 u32) (bitcast v1))
                (let (v42 u32) (add.checked v41 40))
                (let (v43 (ptr i32)) (inttoptr v42))
                (let (v44 i32) (load v43))
                (let (v45 u32) (bitcast v1))
                (let (v46 u32) (add.checked v45 44))
                (let (v47 (ptr i32)) (inttoptr v46))
                (let (v48 i32) (load v47))
                (let (v49 u32) (bitcast v1))
                (let (v50 u32) (add.checked v49 48))
                (let (v51 (ptr i32)) (inttoptr v50))
                (let (v52 i32) (load v51))
                (let (v53 u32) (bitcast v1))
                (let (v54 u32) (add.checked v53 52))
                (let (v55 (ptr i32)) (inttoptr v54))
                (let (v56 i32) (load v55))
                (let (v57 u32) (bitcast v1))
                (let (v58 u32) (add.checked v57 56))
                (let (v59 (ptr i32)) (inttoptr v58))
                (let (v60 i32) (load v59))
                (let (v61 u32) (bitcast v1))
                (let (v62 u32) (add.checked v61 60))
                (let (v63 (ptr i32)) (inttoptr v62))
                (let (v64 i32) (load v63))
                (let [(v65 i32) (v66 i32) (v67 i32) (v68 i32) (v69 i32) (v70 i32) (v71 i32) (v72 i32)] (call (#miden:core-import/stdlib-crypto-hashes@1.0.0 #blake3-hash-two-to-one) v4 v8 v12 v16 v20 v24 v28 v32 v36 v40 v44 v48 v52 v56 v60 v64))
                (let (v73 u32) (bitcast v0))
                (let (v74 (ptr i32)) (inttoptr v73))
                (store v74 v65)
                (let (v75 u32) (add.checked v73 4))
                (let (v76 (ptr i32)) (inttoptr v75))
                (store v76 v66)
                (let (v77 u32) (add.checked v73 8))
                (let (v78 (ptr i32)) (inttoptr v77))
                (store v78 v67)
                (let (v79 u32) (add.checked v73 12))
                (let (v80 (ptr i32)) (inttoptr v79))
                (store v80 v68)
                (let (v81 u32) (add.checked v73 16))
                (let (v82 (ptr i32)) (inttoptr v81))
                (store v82 v69)
                (let (v83 u32) (add.checked v73 20))
                (let (v84 (ptr i32)) (inttoptr v83))
                (store v84 v70)
                (let (v85 u32) (add.checked v73 24))
                (let (v86 (ptr i32)) (inttoptr v85))
                (store v86 v71)
                (let (v87 u32) (add.checked v73 28))
                (let (v88 (ptr i32)) (inttoptr v87))
                (store v88 v72)
                (br (block 1)))

            (block 1
                (ret))
        )

        (func (export #test_rpo_falcon512_verify) (param i32) (param i32)
            (block 0 (param v0 i32) (param v1 i32)
                (let (v2 u32) (bitcast v0))
                (let (v3 u32) (mod.unchecked v2 4))
                (assertz 250 v3)
                (let (v4 (ptr felt)) (inttoptr v2))
                (let (v5 felt) (load v4))
                (let (v6 u32) (bitcast v0))
                (let (v7 u32) (add.checked v6 4))
                (let (v8 u32) (mod.unchecked v7 4))
                (assertz 250 v8)
                (let (v9 (ptr felt)) (inttoptr v7))
                (let (v10 felt) (load v9))
                (let (v11 u32) (bitcast v0))
                (let (v12 u32) (add.checked v11 8))
                (let (v13 u32) (mod.unchecked v12 4))
                (assertz 250 v13)
                (let (v14 (ptr felt)) (inttoptr v12))
                (let (v15 felt) (load v14))
                (let (v16 u32) (bitcast v0))
                (let (v17 u32) (add.checked v16 12))
                (let (v18 u32) (mod.unchecked v17 4))
                (assertz 250 v18)
                (let (v19 (ptr felt)) (inttoptr v17))
                (let (v20 felt) (load v19))
                (let (v21 u32) (bitcast v1))
                (let (v22 u32) (mod.unchecked v21 4))
                (assertz 250 v22)
                (let (v23 (ptr felt)) (inttoptr v21))
                (let (v24 felt) (load v23))
                (let (v25 u32) (bitcast v1))
                (let (v26 u32) (add.checked v25 4))
                (let (v27 u32) (mod.unchecked v26 4))
                (assertz 250 v27)
                (let (v28 (ptr felt)) (inttoptr v26))
                (let (v29 felt) (load v28))
                (let (v30 u32) (bitcast v1))
                (let (v31 u32) (add.checked v30 8))
                (let (v32 u32) (mod.unchecked v31 4))
                (assertz 250 v32)
                (let (v33 (ptr felt)) (inttoptr v31))
                (let (v34 felt) (load v33))
                (let (v35 u32) (bitcast v1))
                (let (v36 u32) (add.checked v35 12))
                (let (v37 u32) (mod.unchecked v36 4))
                (assertz 250 v37)
                (let (v38 (ptr felt)) (inttoptr v36))
                (let (v39 felt) (load v38))
                (call (#miden:core-import/stdlib-crypto-dsa@1.0.0 #rpo-falcon512-verify) v5 v10 v15 v20 v24 v29 v34 v39)
                (br (block 1)))

            (block 1
                (ret))
        )

        (func (export #test_pipe_words_to_memory) (param i32) (param felt)
            (block 0 (param v0 i32) (param v1 felt)
                (call #miden_stdlib_sys::stdlib::mem::pipe_words_to_memory v0 v1)
                (br (block 1)))

            (block 1
                (ret))
        )

        (func (export #test_pipe_double_words_to_memory)
              (param i32) (param felt)
            (block 0 (param v0 i32) (param v1 felt)
                (call #miden_stdlib_sys::stdlib::mem::pipe_double_words_to_memory v0 v1)
                (br (block 1)))

            (block 1
                (ret))
        )

        (func (export #test_remove_asset) (param i32) (result felt)
            (block 0 (param v0 i32)
                (let (v2 i32) (const.i32 0))
                (let (v3 felt) (const.felt 0))
                (let (v4 i32) (global.load i32 (global.symbol #__stack_pointer)))
                (let (v5 i32) (const.i32 32))
                (let (v6 i32) (sub.wrapping v4 v5))
                (let (v7 i32) (const.i32 -32))
                (let (v8 i32) (band v6 v7))
                (let (v9 (ptr i32)) (global.symbol #__stack_pointer))
                (store v9 v8)
                (call #miden_base_sys::bindings::tx::remove_asset v8 v0)
                (let (v10 u32) (bitcast v8))
                (let (v11 u32) (mod.unchecked v10 4))
                (assertz 250 v11)
                (let (v12 (ptr felt)) (inttoptr v10))
                (let (v13 felt) (load v12))
                (let (v14 (ptr i32)) (global.symbol #__stack_pointer))
                (store v14 v4)
                (br (block 1 v13)))

            (block 1 (param v1 felt)
                (ret v1))
        )

        (func (export #test_create_note)
              (param i32) (param felt) (param felt) (param i32) (result felt)
            (block 0
                    (param v0 i32)
                    (param v1 felt)
                    (param v2 felt)
                    (param v3 i32)
                (let (v5 felt) (call #miden_base_sys::bindings::tx::create_note v0 v1 v2 v3))
                (br (block 1 v5)))

            (block 1 (param v4 felt)
                (ret v4))
        )

        (func (export #__rust_alloc) (param i32) (param i32) (result i32)
            (block 0 (param v0 i32) (param v1 i32)
                (let (v3 i32) (const.i32 1048576))
                (let (v4 i32) (call #<miden_sdk_alloc::BumpAlloc as core::alloc::global::GlobalAlloc>::alloc v3 v1 v0))
                (br (block 1 v4)))

            (block 1 (param v2 i32)
                (ret v2))
        )

        (func (export #__rust_alloc_zeroed) (param i32) (param i32) (result i32)
            (block 0 (param v0 i32) (param v1 i32)
                (let (v3 i32) (const.i32 1048576))
                (let (v4 i32) (call #core::alloc::global::GlobalAlloc::alloc_zeroed v3 v1 v0))
                (br (block 1 v4)))

            (block 1 (param v2 i32)
                (ret v2))
        )

        (func (export #<miden_sdk_alloc::BumpAlloc as core::alloc::global::GlobalAlloc>::alloc)
              (param i32) (param i32) (param i32) (result i32)
            (block 0 (param v0 i32) (param v1 i32) (param v2 i32)
                (let (v4 i32) (const.i32 0))
                (let (v5 i32) (const.i32 32))
                (let (v6 i32) (const.i32 32))
                (let (v7 u32) (bitcast v1))
                (let (v8 u32) (bitcast v6))
                (let (v9 i1) (gt v7 v8))
                (let (v10 i32) (sext v9))
                (let (v11 i1) (neq v10 0))
                (let (v12 i32) (select v11 v1 v5))
                (let (v13 u32) (popcnt v12))
                (let (v14 i32) (bitcast v13))
                (let (v15 i32) (const.i32 1))
                (let (v16 i1) (neq v14 v15))
                (let (v17 i32) (zext v16))
                (let (v18 i1) (neq v17 0))
                (condbr v18 (block 2) (block 3)))

            (block 1 (param v3 i32))

            (block 2
                (unreachable))

            (block 3
                (let (v19 i32) (const.i32 -2147483648))
                (let (v20 i32) (sub.wrapping v19 v12))
                (let (v21 u32) (bitcast v20))
                (let (v22 u32) (bitcast v2))
                (let (v23 i1) (lt v21 v22))
                (let (v24 i32) (sext v23))
                (let (v25 i1) (neq v24 0))
                (condbr v25 (block 2) (block 4)))

            (block 4
                (let (v26 i32) (const.i32 0))
                (let (v27 i32) (add.wrapping v12 v2))
                (let (v28 i32) (const.i32 -1))
                (let (v29 i32) (add.wrapping v27 v28))
                (let (v30 i32) (const.i32 0))
                (let (v31 i32) (sub.wrapping v30 v12))
                (let (v32 i32) (band v29 v31))
                (let (v33 u32) (bitcast v0))
                (let (v34 u32) (mod.unchecked v33 4))
                (assertz 250 v34)
                (let (v35 (ptr i32)) (inttoptr v33))
                (let (v36 i32) (load v35))
                (let (v37 i1) (neq v36 0))
                (condbr v37 (block 5 v0 v32 v12 v26) (block 6)))

            (block 5
                    (param v49 i32)
                    (param v55 i32)
                    (param v65 i32)
                    (param v68 i32)
                (let (v48 i32) (const.i32 268435456))
                (let (v50 u32) (bitcast v49))
                (let (v51 u32) (mod.unchecked v50 4))
                (assertz 250 v51)
                (let (v52 (ptr i32)) (inttoptr v50))
                (let (v53 i32) (load v52))
                (let (v54 i32) (sub.wrapping v48 v53))
                (let (v56 u32) (bitcast v54))
                (let (v57 u32) (bitcast v55))
                (let (v58 i1) (lt v56 v57))
                (let (v59 i32) (sext v58))
                (let (v60 i1) (neq v59 0))
                (condbr v60 (block 7 v68) (block 8)))

            (block 6
                (let (v38 u32) (call (#miden:core-import/intrinsics-mem@1.0.0 #heap-base)))
                (let (v39 u32) (memory.size))
                (let (v40 i32) (const.i32 16))
                (let (v41 u32) (bitcast v40))
                (let (v42 u32) (shl.wrapping v39 v41))
                (let (v43 u32) (add.wrapping v38 v42))
                (let (v44 i32) (bitcast v43))
                (let (v45 u32) (bitcast v0))
                (let (v46 u32) (mod.unchecked v45 4))
                (assertz 250 v46)
                (let (v47 (ptr i32)) (inttoptr v45))
                (store v47 v44)
                (br (block 5 v0 v32 v12 v26)))

            (block 7 (param v67 i32)
                (ret v67))

            (block 8
                (let (v61 i32) (add.wrapping v53 v55))
                (let (v62 u32) (bitcast v49))
                (let (v63 u32) (mod.unchecked v62 4))
                (assertz 250 v63)
                (let (v64 (ptr i32)) (inttoptr v62))
                (store v64 v61)
                (let (v66 i32) (add.wrapping v53 v65))
                (br (block 7 v66)))
        )

        (func (export #miden_base_sys::bindings::tx::get_id)
              (result felt)
            (block 0
                (let (v1 felt) (call (#miden:core-import/account@1.0.0 #get-id)))
                (br (block 1 v1)))

            (block 1 (param v0 felt)
                (ret v0))
        )

        (func (export #miden_base_sys::bindings::tx::get_inputs)
              (param i32)
            (block 0 (param v0 i32)
                (let (v1 i32) (const.i32 0))
                (let (v2 i32) (global.load i32 (global.symbol #__stack_pointer)))
                (let (v3 i32) (const.i32 16))
                (let (v4 i32) (sub.wrapping v2 v3))
                (let (v5 (ptr i32)) (global.symbol #__stack_pointer))
                (store v5 v4)
                (let (v6 i32) (const.i32 4))
                (let (v7 i32) (add.wrapping v4 v6))
                (let (v8 i32) (const.i32 256))
                (let (v9 i32) (const.i32 0))
                (call #alloc::raw_vec::RawVec<T,A>::try_allocate_in v7 v8 v9)
                (let (v10 u32) (bitcast v4))
                (let (v11 u32) (add.checked v10 8))
                (let (v12 u32) (mod.unchecked v11 4))
                (assertz 250 v12)
                (let (v13 (ptr i32)) (inttoptr v11))
                (let (v14 i32) (load v13))
                (let (v15 u32) (bitcast v4))
                (let (v16 u32) (add.checked v15 4))
                (let (v17 u32) (mod.unchecked v16 4))
                (assertz 250 v17)
                (let (v18 (ptr i32)) (inttoptr v16))
                (let (v19 i32) (load v18))
                (let (v20 i32) (const.i32 1))
                (let (v21 i1) (neq v19 v20))
                (let (v22 i32) (zext v21))
                (let (v23 i1) (neq v22 0))
                (condbr v23 (block 2) (block 3)))

            (block 1
                (ret))

            (block 2
                (let (v29 u32) (bitcast v4))
                (let (v30 u32) (add.checked v29 12))
                (let (v31 u32) (mod.unchecked v30 4))
                (assertz 250 v31)
                (let (v32 (ptr i32)) (inttoptr v30))
                (let (v33 i32) (load v32))
                (let (v34 i32) (const.i32 4))
                (let (v35 u32) (bitcast v33))
                (let (v36 u32) (bitcast v34))
                (let (v37 u32) (shr.wrapping v35 v36))
                (let (v38 i32) (bitcast v37))
                (let [(v39 i32) (v40 i32)] (call (#miden:core-import/note@1.0.0 #get-inputs) v38))
                (let (v41 u32) (bitcast v0))
                (let (v42 u32) (add.checked v41 8))
                (let (v43 u32) (mod.unchecked v42 4))
                (assertz 250 v43)
                (let (v44 (ptr i32)) (inttoptr v42))
                (store v44 v39)
                (let (v45 u32) (bitcast v0))
                (let (v46 u32) (add.checked v45 4))
                (let (v47 u32) (mod.unchecked v46 4))
                (assertz 250 v47)
                (let (v48 (ptr i32)) (inttoptr v46))
                (store v48 v33)
                (let (v49 u32) (bitcast v0))
                (let (v50 u32) (mod.unchecked v49 4))
                (assertz 250 v50)
                (let (v51 (ptr i32)) (inttoptr v49))
                (store v51 v14)
                (let (v52 i32) (const.i32 16))
                (let (v53 i32) (add.wrapping v4 v52))
                (let (v54 (ptr i32)) (global.symbol #__stack_pointer))
                (store v54 v53)
                (br (block 1)))

            (block 3
                (let (v24 u32) (bitcast v4))
                (let (v25 u32) (add.checked v24 12))
                (let (v26 u32) (mod.unchecked v25 4))
                (assertz 250 v26)
                (let (v27 (ptr i32)) (inttoptr v25))
                (let (v28 i32) (load v27))
                (call #alloc::raw_vec::handle_error v14 v28)
                (unreachable))
        )

        (func (export #miden_base_sys::bindings::tx::add_asset)
              (param i32) (param i32)
            (block 0 (param v0 i32) (param v1 i32)
                (let (v2 u32) (bitcast v1))
                (let (v3 u32) (mod.unchecked v2 4))
                (assertz 250 v3)
                (let (v4 (ptr felt)) (inttoptr v2))
                (let (v5 felt) (load v4))
                (let (v6 u32) (bitcast v1))
                (let (v7 u32) (add.checked v6 4))
                (let (v8 u32) (mod.unchecked v7 4))
                (assertz 250 v8)
                (let (v9 (ptr felt)) (inttoptr v7))
                (let (v10 felt) (load v9))
                (let (v11 u32) (bitcast v1))
                (let (v12 u32) (add.checked v11 8))
                (let (v13 u32) (mod.unchecked v12 4))
                (assertz 250 v13)
                (let (v14 (ptr felt)) (inttoptr v12))
                (let (v15 felt) (load v14))
                (let (v16 u32) (bitcast v1))
                (let (v17 u32) (add.checked v16 12))
                (let (v18 u32) (mod.unchecked v17 4))
                (assertz 250 v18)
                (let (v19 (ptr felt)) (inttoptr v17))
                (let (v20 felt) (load v19))
                (let [(v21 felt) (v22 felt) (v23 felt) (v24 felt)] (call (#miden:core-import/account@1.0.0 #add-asset) v5 v10 v15 v20))
                (let (v25 u32) (bitcast v0))
                (let (v26 (ptr felt)) (inttoptr v25))
                (store v26 v21)
                (let (v27 u32) (add.checked v25 4))
                (let (v28 (ptr felt)) (inttoptr v27))
                (store v28 v22)
                (let (v29 u32) (add.checked v25 8))
                (let (v30 (ptr felt)) (inttoptr v29))
                (store v30 v23)
                (let (v31 u32) (add.checked v25 12))
                (let (v32 (ptr felt)) (inttoptr v31))
                (store v32 v24)
                (br (block 1)))

            (block 1
                (ret))
        )

        (func (export #miden_base_sys::bindings::tx::remove_asset)
              (param i32) (param i32)
            (block 0 (param v0 i32) (param v1 i32)
                (let (v2 u32) (bitcast v1))
                (let (v3 u32) (mod.unchecked v2 4))
                (assertz 250 v3)
                (let (v4 (ptr felt)) (inttoptr v2))
                (let (v5 felt) (load v4))
                (let (v6 u32) (bitcast v1))
                (let (v7 u32) (add.checked v6 4))
                (let (v8 u32) (mod.unchecked v7 4))
                (assertz 250 v8)
                (let (v9 (ptr felt)) (inttoptr v7))
                (let (v10 felt) (load v9))
                (let (v11 u32) (bitcast v1))
                (let (v12 u32) (add.checked v11 8))
                (let (v13 u32) (mod.unchecked v12 4))
                (assertz 250 v13)
                (let (v14 (ptr felt)) (inttoptr v12))
                (let (v15 felt) (load v14))
                (let (v16 u32) (bitcast v1))
                (let (v17 u32) (add.checked v16 12))
                (let (v18 u32) (mod.unchecked v17 4))
                (assertz 250 v18)
                (let (v19 (ptr felt)) (inttoptr v17))
                (let (v20 felt) (load v19))
                (let [(v21 felt) (v22 felt) (v23 felt) (v24 felt)] (call (#miden:core-import/account@1.0.0 #remove-asset) v5 v10 v15 v20))
                (let (v25 u32) (bitcast v0))
                (let (v26 (ptr felt)) (inttoptr v25))
                (store v26 v21)
                (let (v27 u32) (add.checked v25 4))
                (let (v28 (ptr felt)) (inttoptr v27))
                (store v28 v22)
                (let (v29 u32) (add.checked v25 8))
                (let (v30 (ptr felt)) (inttoptr v29))
                (store v30 v23)
                (let (v31 u32) (add.checked v25 12))
                (let (v32 (ptr felt)) (inttoptr v31))
                (store v32 v24)
                (br (block 1)))

            (block 1
                (ret))
        )

        (func (export #miden_base_sys::bindings::tx::create_note)
              (param i32) (param felt) (param felt) (param i32) (result felt)
            (block 0
                    (param v0 i32)
                    (param v1 felt)
                    (param v2 felt)
                    (param v3 i32)
                (let (v5 u32) (bitcast v0))
                (let (v6 u32) (mod.unchecked v5 4))
                (assertz 250 v6)
                (let (v7 (ptr felt)) (inttoptr v5))
                (let (v8 felt) (load v7))
                (let (v9 u32) (bitcast v0))
                (let (v10 u32) (add.checked v9 4))
                (let (v11 u32) (mod.unchecked v10 4))
                (assertz 250 v11)
                (let (v12 (ptr felt)) (inttoptr v10))
                (let (v13 felt) (load v12))
                (let (v14 u32) (bitcast v0))
                (let (v15 u32) (add.checked v14 8))
                (let (v16 u32) (mod.unchecked v15 4))
                (assertz 250 v16)
                (let (v17 (ptr felt)) (inttoptr v15))
                (let (v18 felt) (load v17))
                (let (v19 u32) (bitcast v0))
                (let (v20 u32) (add.checked v19 12))
                (let (v21 u32) (mod.unchecked v20 4))
                (assertz 250 v21)
                (let (v22 (ptr felt)) (inttoptr v20))
                (let (v23 felt) (load v22))
                (let (v24 u32) (bitcast v3))
                (let (v25 u32) (mod.unchecked v24 4))
                (assertz 250 v25)
                (let (v26 (ptr felt)) (inttoptr v24))
                (let (v27 felt) (load v26))
                (let (v28 u32) (bitcast v3))
                (let (v29 u32) (add.checked v28 4))
                (let (v30 u32) (mod.unchecked v29 4))
                (assertz 250 v30)
                (let (v31 (ptr felt)) (inttoptr v29))
                (let (v32 felt) (load v31))
                (let (v33 u32) (bitcast v3))
                (let (v34 u32) (add.checked v33 8))
                (let (v35 u32) (mod.unchecked v34 4))
                (assertz 250 v35)
                (let (v36 (ptr felt)) (inttoptr v34))
                (let (v37 felt) (load v36))
                (let (v38 u32) (bitcast v3))
                (let (v39 u32) (add.checked v38 12))
                (let (v40 u32) (mod.unchecked v39 4))
                (assertz 250 v40)
                (let (v41 (ptr felt)) (inttoptr v39))
                (let (v42 felt) (load v41))
                (let (v43 felt) (call (#miden:core-import/tx@1.0.0 #create-note) v8 v13 v18 v23 v1 v2 v27 v32 v37 v42))
                (br (block 1 v43)))

            (block 1 (param v4 felt)
                (ret v4))
        )

        (func (export #alloc::vec::Vec<T>::with_capacity)
              (param i32) (param i32)
            (block 0 (param v0 i32) (param v1 i32)
                (let (v2 i32) (const.i32 0))
                (let (v3 i32) (global.load i32 (global.symbol #__stack_pointer)))
                (let (v4 i32) (const.i32 16))
                (let (v5 i32) (sub.wrapping v3 v4))
                (let (v6 (ptr i32)) (global.symbol #__stack_pointer))
                (store v6 v5)
                (let (v7 i32) (const.i32 4))
                (let (v8 i32) (add.wrapping v5 v7))
                (let (v9 i32) (const.i32 0))
                (call #alloc::raw_vec::RawVec<T,A>::try_allocate_in v8 v1 v9)
                (let (v10 u32) (bitcast v5))
                (let (v11 u32) (add.checked v10 8))
                (let (v12 u32) (mod.unchecked v11 4))
                (assertz 250 v12)
                (let (v13 (ptr i32)) (inttoptr v11))
                (let (v14 i32) (load v13))
                (let (v15 u32) (bitcast v5))
                (let (v16 u32) (add.checked v15 4))
                (let (v17 u32) (mod.unchecked v16 4))
                (assertz 250 v17)
                (let (v18 (ptr i32)) (inttoptr v16))
                (let (v19 i32) (load v18))
                (let (v20 i32) (const.i32 1))
                (let (v21 i1) (neq v19 v20))
                (let (v22 i32) (zext v21))
                (let (v23 i1) (neq v22 0))
                (condbr v23 (block 2) (block 3)))

            (block 1
                (ret))

            (block 2
                (let (v29 u32) (bitcast v5))
                (let (v30 u32) (add.checked v29 12))
                (let (v31 u32) (mod.unchecked v30 4))
                (assertz 250 v31)
                (let (v32 (ptr i32)) (inttoptr v30))
                (let (v33 i32) (load v32))
                (let (v34 i32) (const.i32 0))
                (let (v35 u32) (bitcast v0))
                (let (v36 u32) (add.checked v35 8))
                (let (v37 u32) (mod.unchecked v36 4))
                (assertz 250 v37)
                (let (v38 (ptr i32)) (inttoptr v36))
                (store v38 v34)
                (let (v39 u32) (bitcast v0))
                (let (v40 u32) (add.checked v39 4))
                (let (v41 u32) (mod.unchecked v40 4))
                (assertz 250 v41)
                (let (v42 (ptr i32)) (inttoptr v40))
                (store v42 v33)
                (let (v43 u32) (bitcast v0))
                (let (v44 u32) (mod.unchecked v43 4))
                (assertz 250 v44)
                (let (v45 (ptr i32)) (inttoptr v43))
                (store v45 v14)
                (let (v46 i32) (const.i32 16))
                (let (v47 i32) (add.wrapping v5 v46))
                (let (v48 (ptr i32)) (global.symbol #__stack_pointer))
                (store v48 v47)
                (br (block 1)))

            (block 3
                (let (v24 u32) (bitcast v5))
                (let (v25 u32) (add.checked v24 12))
                (let (v26 u32) (mod.unchecked v25 4))
                (assertz 250 v26)
                (let (v27 (ptr i32)) (inttoptr v25))
                (let (v28 i32) (load v27))
                (call #alloc::raw_vec::handle_error v14 v28)
                (unreachable))
        )

        (func (export #alloc::raw_vec::RawVec<T,A>::try_allocate_in)
              (param i32) (param i32) (param i32)
            (block 0 (param v0 i32) (param v1 i32) (param v2 i32)
                (let (v3 i32) (const.i32 0))
                (let (v4 i1) (neq v1 0))
                (condbr v4 (block 3) (block 4)))

            (block 1
                (ret))

            (block 2 (param v62 i32) (param v64 i32)
                (let (v65 u32) (bitcast v62))
                (let (v66 u32) (mod.unchecked v65 4))
                (assertz 250 v66)
                (let (v67 (ptr i32)) (inttoptr v65))
                (store v67 v64)
                (br (block 1)))

            (block 3
                (let (v11 i32) (const.i32 536870912))
                (let (v12 u32) (bitcast v1))
                (let (v13 u32) (bitcast v11))
                (let (v14 i1) (lt v12 v13))
                (let (v15 i32) (sext v14))
                (let (v16 i1) (neq v15 0))
                (condbr v16 (block 6) (block 7)))

            (block 4
                (let (v5 i64) (const.i64 17179869184))
                (let (v6 u32) (bitcast v0))
                (let (v7 u32) (add.checked v6 4))
                (let (v8 u32) (mod.unchecked v7 4))
                (assertz 250 v8)
                (let (v9 (ptr i64)) (inttoptr v7))
                (store v9 v5)
                (let (v10 i32) (const.i32 0))
                (br (block 2 v0 v10)))

            (block 5 (param v63 i32)
                (let (v61 i32) (const.i32 1))
                (br (block 2 v63 v61)))

            (block 6
                (let (v22 i32) (const.i32 2))
                (let (v23 u32) (bitcast v22))
                (let (v24 i32) (shl.wrapping v1 v23))
                (let (v25 i1) (neq v2 0))
                (condbr v25 (block 9) (block 10)))

            (block 7
                (let (v17 i32) (const.i32 0))
                (let (v18 u32) (bitcast v0))
                (let (v19 u32) (add.checked v18 4))
                (let (v20 u32) (mod.unchecked v19 4))
                (assertz 250 v20)
                (let (v21 (ptr i32)) (inttoptr v19))
                (store v21 v17)
                (br (block 5 v0)))

            (block 8
                    (param v36 i32)
                    (param v40 i32)
                    (param v45 i32)
                    (param v51 i32)
                (let (v37 i1) (eq v36 0))
                (let (v38 i32) (zext v37))
                (let (v39 i1) (neq v38 0))
                (condbr v39 (block 11) (block 12)))

            (block 9
                (let (v34 i32) (const.i32 4))
                (let (v35 i32) (call #__rust_alloc_zeroed v24 v34))
                (br (block 8 v35 v0 v1 v24)))

            (block 10
                (let (v26 i32) (const.i32 0))
                (let (v27 u32) (bitcast v26))
                (let (v28 u32) (add.checked v27 1048580))
                (let (v29 (ptr u8)) (inttoptr v28))
                (let (v30 u8) (load v29))
                (let (v31 i32) (zext v30))
                (let (v32 i32) (const.i32 4))
                (let (v33 i32) (call #__rust_alloc v24 v32))
                (br (block 8 v33 v0 v1 v24)))

            (block 11
                (let (v52 u32) (bitcast v40))
                (let (v53 u32) (add.checked v52 8))
                (let (v54 u32) (mod.unchecked v53 4))
                (assertz 250 v54)
                (let (v55 (ptr i32)) (inttoptr v53))
                (store v55 v51)
                (let (v56 i32) (const.i32 4))
                (let (v57 u32) (bitcast v40))
                (let (v58 u32) (add.checked v57 4))
                (let (v59 u32) (mod.unchecked v58 4))
                (assertz 250 v59)
                (let (v60 (ptr i32)) (inttoptr v58))
                (store v60 v56)
                (br (block 5 v40)))

            (block 12
                (let (v41 u32) (bitcast v40))
                (let (v42 u32) (add.checked v41 8))
                (let (v43 u32) (mod.unchecked v42 4))
                (assertz 250 v43)
                (let (v44 (ptr i32)) (inttoptr v42))
                (store v44 v36)
                (let (v46 u32) (bitcast v40))
                (let (v47 u32) (add.checked v46 4))
                (let (v48 u32) (mod.unchecked v47 4))
                (assertz 250 v48)
                (let (v49 (ptr i32)) (inttoptr v47))
                (store v49 v45)
                (let (v50 i32) (const.i32 0))
                (br (block 2 v40 v50)))
        )

        (func (export #miden_stdlib_sys::stdlib::mem::pipe_words_to_memory)
              (param i32) (param felt)
            (block 0 (param v0 i32) (param v1 felt)
                (let (v2 i32) (const.i32 0))
                (let (v3 i32) (global.load i32 (global.symbol #__stack_pointer)))
                (let (v4 i32) (const.i32 96))
                (let (v5 i32) (sub.wrapping v3 v4))
                (let (v6 i32) (const.i32 -32))
                (let (v7 i32) (band v5 v6))
                (let (v8 (ptr i32)) (global.symbol #__stack_pointer))
                (store v8 v7)
                (let (v9 i32) (const.i32 20))
                (let (v10 i32) (add.wrapping v7 v9))
                (let (v11 i64) (cast v1))
                (let (v12 i32) (trunc v11))
                (let (v13 i32) (const.i32 2))
                (let (v14 u32) (bitcast v13))
                (let (v15 i32) (shl.wrapping v12 v14))
                (call #alloc::vec::Vec<T>::with_capacity v10 v15)
                (let (v16 u32) (bitcast v7))
                (let (v17 u32) (add.checked v16 24))
                (let (v18 u32) (mod.unchecked v17 4))
                (assertz 250 v18)
                (let (v19 (ptr i32)) (inttoptr v17))
                (let (v20 i32) (load v19))
                (let (v21 i32) (const.i32 32))
                (let (v22 i32) (add.wrapping v7 v21))
                (let [(v23 felt) (v24 felt) (v25 felt) (v26 felt) (v27 i32)] (call (#miden:core-import/stdlib-mem@1.0.0 #pipe-words-to-memory) v1 v20))
                (let (v28 u32) (bitcast v22))
                (let (v29 (ptr felt)) (inttoptr v28))
                (store v29 v23)
                (let (v30 u32) (add.checked v28 4))
                (let (v31 (ptr felt)) (inttoptr v30))
                (store v31 v24)
                (let (v32 u32) (add.checked v28 8))
                (let (v33 (ptr felt)) (inttoptr v32))
                (store v33 v25)
                (let (v34 u32) (add.checked v28 12))
                (let (v35 (ptr felt)) (inttoptr v34))
                (store v35 v26)
                (let (v36 u32) (add.checked v28 16))
                (let (v37 (ptr i32)) (inttoptr v36))
                (store v37 v27)
                (let (v38 i32) (const.i32 24))
                (let (v39 i32) (add.wrapping v0 v38))
                (let (v40 u32) (bitcast v7))
                (let (v41 u32) (add.checked v40 56))
                (let (v42 u32) (mod.unchecked v41 8))
                (assertz 250 v42)
                (let (v43 (ptr i64)) (inttoptr v41))
                (let (v44 i64) (load v43))
                (let (v45 u32) (bitcast v39))
                (let (v46 u32) (mod.unchecked v45 8))
                (assertz 250 v46)
                (let (v47 (ptr i64)) (inttoptr v45))
                (store v47 v44)
                (let (v48 i32) (const.i32 16))
                (let (v49 i32) (add.wrapping v0 v48))
                (let (v50 u32) (bitcast v7))
                (let (v51 u32) (add.checked v50 48))
                (let (v52 u32) (mod.unchecked v51 8))
                (assertz 250 v52)
                (let (v53 (ptr i64)) (inttoptr v51))
                (let (v54 i64) (load v53))
                (let (v55 u32) (bitcast v49))
                (let (v56 u32) (mod.unchecked v55 8))
                (assertz 250 v56)
                (let (v57 (ptr i64)) (inttoptr v55))
                (store v57 v54)
                (let (v58 i32) (const.i32 8))
                (let (v59 i32) (add.wrapping v0 v58))
                (let (v60 u32) (bitcast v7))
                (let (v61 u32) (add.checked v60 40))
                (let (v62 u32) (mod.unchecked v61 8))
                (assertz 250 v62)
                (let (v63 (ptr i64)) (inttoptr v61))
                (let (v64 i64) (load v63))
                (let (v65 u32) (bitcast v59))
                (let (v66 u32) (mod.unchecked v65 8))
                (assertz 250 v66)
                (let (v67 (ptr i64)) (inttoptr v65))
                (store v67 v64)
                (let (v68 u32) (bitcast v7))
                (let (v69 u32) (add.checked v68 32))
                (let (v70 u32) (mod.unchecked v69 8))
                (assertz 250 v70)
                (let (v71 (ptr i64)) (inttoptr v69))
                (let (v72 i64) (load v71))
                (let (v73 u32) (bitcast v0))
                (let (v74 u32) (mod.unchecked v73 8))
                (assertz 250 v74)
                (let (v75 (ptr i64)) (inttoptr v73))
                (store v75 v72)
                (let (v76 i32) (const.i32 40))
                (let (v77 i32) (add.wrapping v0 v76))
                (let (v78 i32) (const.i32 20))
                (let (v79 i32) (add.wrapping v7 v78))
                (let (v80 i32) (const.i32 8))
                (let (v81 i32) (add.wrapping v79 v80))
                (let (v82 u32) (bitcast v81))
                (let (v83 u32) (mod.unchecked v82 4))
                (assertz 250 v83)
                (let (v84 (ptr i32)) (inttoptr v82))
                (let (v85 i32) (load v84))
                (let (v86 u32) (bitcast v77))
                (let (v87 u32) (mod.unchecked v86 4))
                (assertz 250 v87)
                (let (v88 (ptr i32)) (inttoptr v86))
                (store v88 v85)
                (let (v89 u32) (bitcast v7))
                (let (v90 u32) (add.checked v89 20))
                (let (v91 u32) (mod.unchecked v90 4))
                (assertz 250 v91)
                (let (v92 (ptr i64)) (inttoptr v90))
                (let (v93 i64) (load v92))
                (let (v94 u32) (bitcast v0))
                (let (v95 u32) (add.checked v94 32))
                (let (v96 u32) (mod.unchecked v95 4))
                (assertz 250 v96)
                (let (v97 (ptr i64)) (inttoptr v95))
                (store v97 v93)
                (let (v98 (ptr i32)) (global.symbol #__stack_pointer))
                (store v98 v3)
                (br (block 1)))

            (block 1
                (ret))
        )

        (func (export #miden_stdlib_sys::stdlib::mem::pipe_double_words_to_memory)
              (param i32) (param felt)
            (block 0 (param v0 i32) (param v1 felt)
                (let (v2 i32) (const.i32 0))
                (let (v3 i32) (global.load i32 (global.symbol #__stack_pointer)))
                (let (v4 i32) (const.i32 160))
                (let (v5 i32) (sub.wrapping v3 v4))
                (let (v6 i32) (const.i32 -32))
                (let (v7 i32) (band v5 v6))
                (let (v8 (ptr i32)) (global.symbol #__stack_pointer))
                (store v8 v7)
                (let (v9 i32) (const.i32 20))
                (let (v10 i32) (add.wrapping v7 v9))
                (let (v11 i64) (cast v1))
                (let (v12 i32) (trunc v11))
                (let (v13 i32) (const.i32 2))
                (let (v14 u32) (bitcast v13))
                (let (v15 i32) (shl.wrapping v12 v14))
                (call #alloc::vec::Vec<T>::with_capacity v10 v15)
                (let (v16 u32) (bitcast v7))
                (let (v17 u32) (add.checked v16 24))
                (let (v18 u32) (mod.unchecked v17 4))
                (assertz 250 v18)
                (let (v19 (ptr i32)) (inttoptr v17))
                (let (v20 i32) (load v19))
                (let (v21 i64) (const.i64 0))
                (let (v22 felt) (cast v21))
                (let (v23 i32) (const.i32 4))
                (let (v24 u32) (bitcast v23))
                (let (v25 i32) (shl.wrapping v12 v24))
                (let (v26 i32) (add.wrapping v20 v25))
                (let (v27 i32) (const.i32 32))
                (let (v28 i32) (add.wrapping v7 v27))
                (let [(v29 felt) (v30 felt) (v31 felt) (v32 felt) (v33 felt) (v34 felt) (v35 felt) (v36 felt) (v37 felt) (v38 felt) (v39 felt) (v40 felt) (v41 i32)] (call (#miden:core-import/stdlib-mem@1.0.0 #pipe-double-words-to-memory) v22 v22 v22 v22 v22 v22 v22 v22 v22 v22 v22 v22 v20 v26))
                (let (v42 u32) (bitcast v28))
                (let (v43 (ptr felt)) (inttoptr v42))
                (store v43 v29)
                (let (v44 u32) (add.checked v42 4))
                (let (v45 (ptr felt)) (inttoptr v44))
                (store v45 v30)
                (let (v46 u32) (add.checked v42 8))
                (let (v47 (ptr felt)) (inttoptr v46))
                (store v47 v31)
                (let (v48 u32) (add.checked v42 12))
                (let (v49 (ptr felt)) (inttoptr v48))
                (store v49 v32)
                (let (v50 u32) (add.checked v42 16))
                (let (v51 (ptr felt)) (inttoptr v50))
                (store v51 v33)
                (let (v52 u32) (add.checked v42 20))
                (let (v53 (ptr felt)) (inttoptr v52))
                (store v53 v34)
                (let (v54 u32) (add.checked v42 24))
                (let (v55 (ptr felt)) (inttoptr v54))
                (store v55 v35)
                (let (v56 u32) (add.checked v42 28))
                (let (v57 (ptr felt)) (inttoptr v56))
                (store v57 v36)
                (let (v58 u32) (add.checked v42 32))
                (let (v59 (ptr felt)) (inttoptr v58))
                (store v59 v37)
                (let (v60 u32) (add.checked v42 36))
                (let (v61 (ptr felt)) (inttoptr v60))
                (store v61 v38)
                (let (v62 u32) (add.checked v42 40))
                (let (v63 (ptr felt)) (inttoptr v62))
                (store v63 v39)
                (let (v64 u32) (add.checked v42 44))
                (let (v65 (ptr felt)) (inttoptr v64))
                (store v65 v40)
                (let (v66 u32) (add.checked v42 48))
                (let (v67 (ptr i32)) (inttoptr v66))
                (store v67 v41)
                (let (v68 i32) (const.i32 24))
                (let (v69 i32) (add.wrapping v0 v68))
                (let (v70 i32) (const.i32 88))
                (let (v71 i32) (add.wrapping v7 v70))
                (let (v72 u32) (bitcast v71))
                (let (v73 u32) (mod.unchecked v72 8))
                (assertz 250 v73)
                (let (v74 (ptr i64)) (inttoptr v72))
                (let (v75 i64) (load v74))
                (let (v76 u32) (bitcast v69))
                (let (v77 u32) (mod.unchecked v76 8))
                (assertz 250 v77)
                (let (v78 (ptr i64)) (inttoptr v76))
                (store v78 v75)
                (let (v79 i32) (const.i32 16))
                (let (v80 i32) (add.wrapping v0 v79))
                (let (v81 i32) (const.i32 80))
                (let (v82 i32) (add.wrapping v7 v81))
                (let (v83 u32) (bitcast v82))
                (let (v84 u32) (mod.unchecked v83 8))
                (assertz 250 v84)
                (let (v85 (ptr i64)) (inttoptr v83))
                (let (v86 i64) (load v85))
                (let (v87 u32) (bitcast v80))
                (let (v88 u32) (mod.unchecked v87 8))
                (assertz 250 v88)
                (let (v89 (ptr i64)) (inttoptr v87))
                (store v89 v86)
                (let (v90 i32) (const.i32 8))
                (let (v91 i32) (add.wrapping v0 v90))
                (let (v92 i32) (const.i32 32))
                (let (v93 i32) (add.wrapping v7 v92))
                (let (v94 i32) (const.i32 40))
                (let (v95 i32) (add.wrapping v93 v94))
                (let (v96 u32) (bitcast v95))
                (let (v97 u32) (mod.unchecked v96 8))
                (assertz 250 v97)
                (let (v98 (ptr i64)) (inttoptr v96))
                (let (v99 i64) (load v98))
                (let (v100 u32) (bitcast v91))
                (let (v101 u32) (mod.unchecked v100 8))
                (assertz 250 v101)
                (let (v102 (ptr i64)) (inttoptr v100))
                (store v102 v99)
                (let (v103 u32) (bitcast v7))
                (let (v104 u32) (add.checked v103 64))
                (let (v105 u32) (mod.unchecked v104 8))
                (assertz 250 v105)
                (let (v106 (ptr i64)) (inttoptr v104))
                (let (v107 i64) (load v106))
                (let (v108 u32) (bitcast v0))
                (let (v109 u32) (mod.unchecked v108 8))
                (assertz 250 v109)
                (let (v110 (ptr i64)) (inttoptr v108))
                (store v110 v107)
                (let (v111 i32) (const.i32 40))
                (let (v112 i32) (add.wrapping v0 v111))
                (let (v113 i32) (const.i32 20))
                (let (v114 i32) (add.wrapping v7 v113))
                (let (v115 i32) (const.i32 8))
                (let (v116 i32) (add.wrapping v114 v115))
                (let (v117 u32) (bitcast v116))
                (let (v118 u32) (mod.unchecked v117 4))
                (assertz 250 v118)
                (let (v119 (ptr i32)) (inttoptr v117))
                (let (v120 i32) (load v119))
                (let (v121 u32) (bitcast v112))
                (let (v122 u32) (mod.unchecked v121 4))
                (assertz 250 v122)
                (let (v123 (ptr i32)) (inttoptr v121))
                (store v123 v120)
                (let (v124 u32) (bitcast v7))
                (let (v125 u32) (add.checked v124 20))
                (let (v126 u32) (mod.unchecked v125 4))
                (assertz 250 v126)
                (let (v127 (ptr i64)) (inttoptr v125))
                (let (v128 i64) (load v127))
                (let (v129 u32) (bitcast v0))
                (let (v130 u32) (add.checked v129 32))
                (let (v131 u32) (mod.unchecked v130 4))
                (assertz 250 v131)
                (let (v132 (ptr i64)) (inttoptr v130))
                (store v132 v128)
                (let (v133 (ptr i32)) (global.symbol #__stack_pointer))
                (store v133 v3)
                (br (block 1)))

            (block 1
                (ret))
        )

        (func (export #dummy) 
            (block 0
                (br (block 1)))

            (block 1
                (ret))
        )

        (func (export #__wasm_call_dtors) 
            (block 0
                (call #dummy)
                (call #dummy)
                (br (block 1)))

            (block 1
                (ret))
        )

        (func (export #alloc::raw_vec::handle_error)
              (param i32) (param i32)
            (block 0 (param v0 i32) (param v1 i32)
                (unreachable))

            (block 1)
        )

        (func (export #get_wallet_magic_number.command_export) (result felt)
            (block 0
                (let (v1 felt) (call #get_wallet_magic_number))
                (call #__wasm_call_dtors)
                (br (block 1 v1)))

            (block 1 (param v0 felt)
                (ret v0))
        )

        (func (export #test_add_asset.command_export) (result felt)
            (block 0
                (let (v1 felt) (call #test_add_asset))
                (call #__wasm_call_dtors)
                (br (block 1 v1)))

            (block 1 (param v0 felt)
                (ret v0))
        )

        (func (export #test_felt_ops_smoke.command_export)
              (param felt) (param felt) (result felt)
            (block 0 (param v0 felt) (param v1 felt)
                (let (v3 felt) (call #test_felt_ops_smoke v0 v1))
                (call #__wasm_call_dtors)
                (br (block 1 v3)))

            (block 1 (param v2 felt)
                (ret v2))
        )

        (func (export #note_script.command_export) (result felt)
            (block 0
                (let (v1 felt) (call #note_script))
                (call #__wasm_call_dtors)
                (br (block 1 v1)))

            (block 1 (param v0 felt)
                (ret v0))
        )

        (func (export #test_blake3_hash_1to1.command_export)
              (param i32) (param i32)
            (block 0 (param v0 i32) (param v1 i32)
                (call #test_blake3_hash_1to1 v0 v1)
                (call #__wasm_call_dtors)
                (br (block 1)))

            (block 1
                (ret))
        )

        (func (export #test_blake3_hash_2to1.command_export)
              (param i32) (param i32)
            (block 0 (param v0 i32) (param v1 i32)
                (call #test_blake3_hash_2to1 v0 v1)
                (call #__wasm_call_dtors)
                (br (block 1)))

            (block 1
                (ret))
        )

        (func (export #test_rpo_falcon512_verify.command_export)
              (param i32) (param i32)
            (block 0 (param v0 i32) (param v1 i32)
                (call #test_rpo_falcon512_verify v0 v1)
                (call #__wasm_call_dtors)
                (br (block 1)))

            (block 1
                (ret))
        )

        (func (export #test_pipe_words_to_memory.command_export)
              (param i32) (param felt)
            (block 0 (param v0 i32) (param v1 felt)
                (call #test_pipe_words_to_memory v0 v1)
                (call #__wasm_call_dtors)
                (br (block 1)))

            (block 1
                (ret))
        )

        (func (export #test_pipe_double_words_to_memory.command_export)
              (param i32) (param felt)
            (block 0 (param v0 i32) (param v1 felt)
                (call #test_pipe_double_words_to_memory v0 v1)
                (call #__wasm_call_dtors)
                (br (block 1)))

            (block 1
                (ret))
        )

        (func (export #test_remove_asset.command_export)
              (param i32) (result felt)
            (block 0 (param v0 i32)
                (let (v2 felt) (call #test_remove_asset v0))
                (call #__wasm_call_dtors)
                (br (block 1 v2)))

            (block 1 (param v1 felt)
                (ret v1))
        )

        (func (export #test_create_note.command_export)
              (param i32) (param felt) (param felt) (param i32) (result felt)
            (block 0
                    (param v0 i32)
                    (param v1 felt)
                    (param v2 felt)
                    (param v3 i32)
                (let (v5 felt) (call #test_create_note v0 v1 v2 v3))
                (call #__wasm_call_dtors)
                (br (block 1 v5)))

            (block 1 (param v4 felt)
                (ret v4))
        )

        ;; Imports
        (func (import #miden:core-import/account@1.0.0 #add-asset)
              (param felt) (param felt) (param felt) (param felt) (result felt felt felt felt))
        (func (import #miden:core-import/account@1.0.0 #get-id) (result felt))
        (func (import #miden:core-import/account@1.0.0 #remove-asset)
              (param felt) (param felt) (param felt) (param felt) (result felt felt felt felt))
        (func (import #miden:core-import/intrinsics-mem@1.0.0 #heap-base)
              (result u32))
        (func (import #miden:core-import/note@1.0.0 #get-inputs)
              (param i32) (result i32 i32))
        (func (import #miden:core-import/stdlib-crypto-dsa@1.0.0 #rpo-falcon512-verify)
              (param felt) (param felt) (param felt) (param felt) (param felt) (param felt) (param felt) (param felt))
        (func (import #miden:core-import/stdlib-crypto-hashes@1.0.0 #blake3-hash-one-to-one)
              (param i32) (param i32) (param i32) (param i32) (param i32) (param i32) (param i32) (param i32) (result i32 i32 i32 i32 i32 i32 i32 i32))
        (func (import #miden:core-import/stdlib-crypto-hashes@1.0.0 #blake3-hash-two-to-one)
              (param i32) (param i32) (param i32) (param i32) (param i32) (param i32) (param i32) (param i32) (param i32) (param i32) (param i32) (param i32) (param i32) (param i32) (param i32) (param i32) (result i32 i32 i32 i32 i32 i32 i32 i32))
        (func (import #miden:core-import/stdlib-mem@1.0.0 #pipe-double-words-to-memory)
              (param felt) (param felt) (param felt) (param felt) (param felt) (param felt) (param felt) (param felt) (param felt) (param felt) (param felt) (param felt) (param i32) (param i32) (result felt felt felt felt felt felt felt felt felt felt felt felt i32))
        (func (import #miden:core-import/stdlib-mem@1.0.0 #pipe-words-to-memory)
              (param felt) (param i32) (result felt felt felt felt i32))
        (func (import #miden:core-import/tx@1.0.0 #create-note)
              (param felt) (param felt) (param felt) (param felt) (param felt) (param felt) (param felt) (param felt) (param felt) (param felt) (result felt))
    )

)
