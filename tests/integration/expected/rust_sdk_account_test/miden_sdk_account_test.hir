component

import miden:tx_kernel/note.get_inputs<0x0000000000000000000000000000000000000000000000000000000000000000> fn(i32) -> i32, i32; mast#0x0000000000000000000000000000000000000000000000000000000000000000 lower env::miden:tx_kernel/note.get_inputs<0x0000000000000000000000000000000000000000000000000000000000000000>

module noname {

    const $0 = 0x00100000;

    global external @__stack_pointer : i32 = $0 { id = 0 };

    pub fn <<alloc::vec::into_iter::IntoIter<T,A> as core::ops::drop::Drop>::drop::DropGuard<T,A> as core::ops::drop::Drop>::drop(i32)     {
    block0(v0: i32):
        v1 = const.i32 0 : i32;
        v2 = global.load (@__stack_pointer) as *mut i8 : i32;
        v3 = const.i32 16 : i32;
        v4 = sub.wrapping v2, v3 : i32;
        v5 = global.symbol @__stack_pointer : *mut i32;
        store v5, v4;
        v6 = cast v0 : u32;
        v7 = inttoptr v6 : *mut i32;
        v8 = load v7 : i32;
        v9 = cast v8 : u32;
        v10 = inttoptr v9 : *mut i64;
        v11 = load v10 : i64;
        v12 = cast v4 : u32;
        v13 = add.checked v12, 8 : u32;
        v14 = inttoptr v13 : *mut i64;
        store v14, v11;
        v15 = const.i32 8 : i32;
        v16 = add.wrapping v4, v15 : i32;
        call noname::<alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop(v16);
        v17 = const.i32 16 : i32;
        v18 = add.wrapping v4, v17 : i32;
        v19 = global.symbol @__stack_pointer : *mut i32;
        store v19, v18;
        br block1;

    block1:
        ret;
    }

    pub fn <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop(i32)     {
    block0(v0: i32):
        v1 = const.i32 0 : i32;
        v2 = cast v0 : u32;
        v3 = add.checked v2, 4 : u32;
        v4 = inttoptr v3 : *mut i32;
        v5 = load v4 : i32;
        v6 = eq v5, 0 : i1;
        v7 = cast v6 : i32;
        v8 = neq v7, 0 : i1;
        condbr v8, block2, block3;

    block1:
        ret;

    block2:
        br block1;

    block3:
        v9 = cast v0 : u32;
        v10 = inttoptr v9 : *mut i32;
        v11 = load v10 : i32;
        v12 = const.i32 3 : i32;
        v13 = shl.wrapping v5, v12 : i32;
        v14 = const.i32 8 : i32;
        call noname::__rust_dealloc(v11, v13, v14);
        br block2;
    }

    pub fn <alloc::vec::into_iter::IntoIter<T,A> as core::ops::drop::Drop>::drop(i32)     {
    block0(v0: i32):
        v1 = const.i32 0 : i32;
        v2 = global.load (@__stack_pointer) as *mut i8 : i32;
        v3 = const.i32 16 : i32;
        v4 = sub.wrapping v2, v3 : i32;
        v5 = global.symbol @__stack_pointer : *mut i32;
        store v5, v4;
        v6 = cast v4 : u32;
        v7 = add.checked v6, 12 : u32;
        v8 = inttoptr v7 : *mut i32;
        store v8, v0;
        v9 = const.i32 12 : i32;
        v10 = add.wrapping v4, v9 : i32;
        call noname::<<alloc::vec::into_iter::IntoIter<T,A> as core::ops::drop::Drop>::drop::DropGuard<T,A> as core::ops::drop::Drop>::drop(v10);
        v11 = const.i32 16 : i32;
        v12 = add.wrapping v4, v11 : i32;
        v13 = global.symbol @__stack_pointer : *mut i32;
        store v13, v12;
        br block1;

    block1:
        ret;
    }

    pub fn note_script()     {
    block0:
        v0 = const.i32 0 : i32;
        v1 = const.i64 0 : i64;
        v2 = global.load (@__stack_pointer) as *mut i8 : i32;
        v3 = const.i32 2048 : i32;
        v4 = sub.wrapping v2, v3 : i32;
        v5 = global.symbol @__stack_pointer : *mut i32;
        store v5, v4;
        v6, v7 = call env::miden:tx_kernel/note.get_inputs<0x0000000000000000000000000000000000000000000000000000000000000000>(v4) : i32, i32;
        v8 = const.i32 3 : i32;
        v9 = shl.wrapping v7, v8 : i32;
        v10 = add.wrapping v4, v9 : i32;
        v11 = cast v4 : u32;
        v12 = add.checked v11, 12 : u32;
        v13 = inttoptr v12 : *mut i32;
        store v13, v10;
        v14 = cast v4 : u32;
        v15 = add.checked v14, 4 : u32;
        v16 = inttoptr v15 : *mut i32;
        store v16, v7;
        v17 = cast v4 : u32;
        v18 = inttoptr v17 : *mut i32;
        store v18, v4;
        v19 = const.i64 0 : i64;
        br block3(v9, v4, v10, v19, v4);

    block1:
        ret;

    block2:
        v41 = const.i32 2048 : i32;
        v42 = add.wrapping v22, v41 : i32;
        v43 = global.symbol @__stack_pointer : *mut i32;
        store v43, v42;
        br block1;

    block3(v20: i32, v22: i32, v23: i32, v27: i64, v34: i32):
        v21 = neq v20, 0 : i1;
        condbr v21, block5, block6;

    block4:

    block5:
        v32 = const.i32 -8 : i32;
        v33 = add.wrapping v20, v32 : i32;
        v35 = cast v34 : u32;
        v36 = inttoptr v35 : *mut i64;
        v37 = load v36 : i64;
        v38 = add.wrapping v37, v27 : i64;
        v39 = const.i32 8 : i32;
        v40 = add.wrapping v34, v39 : i32;
        br block3(v33, v22, v23, v38, v40);

    block6:
        v24 = cast v22 : u32;
        v25 = add.checked v24, 8 : u32;
        v26 = inttoptr v25 : *mut i32;
        store v26, v23;
        call noname::<alloc::vec::into_iter::IntoIter<T,A> as core::ops::drop::Drop>::drop(v22);
        v28 = const.i64 42 : i64;
        v29 = eq v27, v28 : i1;
        v30 = cast v29 : i32;
        v31 = neq v30, 0 : i1;
        condbr v31, block2, block7;

    block7:
        unreachable ;
    }

    pub fn __rust_dealloc(i32, i32, i32)     {
    block0(v0: i32, v1: i32, v2: i32):
        v3 = const.i32 1048576 : i32;
        call noname::<wee_alloc::WeeAlloc as core::alloc::global::GlobalAlloc>::dealloc(v3, v0, v2, v1);
        br block1;

    block1:
        ret;
    }

    pub fn wee_alloc::neighbors::Neighbors<T>::remove(i32)     {
    block0(v0: i32):
        v1 = const.i32 0 : i32;
        v2 = cast v0 : u32;
        v3 = inttoptr v2 : *mut i32;
        v4 = load v3 : i32;
        v5 = const.i32 -4 : i32;
        v6 = band v4, v5 : i32;
        v7 = eq v6, 0 : i1;
        v8 = cast v7 : i32;
        v9 = neq v8, 0 : i1;
        condbr v9, block2(v0, v4), block3;

    block1:
        ret;

    block2(v37: i32, v52: i32):
        v38 = cast v37 : u32;
        v39 = add.checked v38, 4 : u32;
        v40 = inttoptr v39 : *mut i32;
        v41 = load v40 : i32;
        v42 = const.i32 -4 : i32;
        v43 = band v41, v42 : i32;
        v44 = eq v43, 0 : i1;
        v45 = cast v44 : i32;
        v46 = neq v45, 0 : i1;
        condbr v46, block5(v37, v41, v52), block6;

    block3:
        v10 = const.i32 0 : i32;
        v11 = const.i32 2 : i32;
        v12 = band v4, v11 : i32;
        v13 = neq v12, 0 : i1;
        v14 = select v13, v10, v6 : i32;
        v15 = eq v14, 0 : i1;
        v16 = cast v15 : i32;
        v17 = neq v16, 0 : i1;
        condbr v17, block2(v0, v4), block4;

    block4:
        v18 = cast v14 : u32;
        v19 = add.checked v18, 4 : u32;
        v20 = inttoptr v19 : *mut i32;
        v21 = load v20 : i32;
        v22 = const.i32 3 : i32;
        v23 = band v21, v22 : i32;
        v24 = cast v0 : u32;
        v25 = add.checked v24, 4 : u32;
        v26 = inttoptr v25 : *mut i32;
        v27 = load v26 : i32;
        v28 = const.i32 -4 : i32;
        v29 = band v27, v28 : i32;
        v30 = bor v23, v29 : i32;
        v31 = cast v14 : u32;
        v32 = add.checked v31, 4 : u32;
        v33 = inttoptr v32 : *mut i32;
        store v33, v30;
        v34 = cast v0 : u32;
        v35 = inttoptr v34 : *mut i32;
        v36 = load v35 : i32;
        br block2(v0, v36);

    block5(v65: i32, v66: i32, v72: i32):
        v67 = const.i32 3 : i32;
        v68 = band v66, v67 : i32;
        v69 = cast v65 : u32;
        v70 = add.checked v69, 4 : u32;
        v71 = inttoptr v70 : *mut i32;
        store v71, v68;
        v73 = const.i32 3 : i32;
        v74 = band v72, v73 : i32;
        v75 = cast v65 : u32;
        v76 = inttoptr v75 : *mut i32;
        store v76, v74;
        br block1;

    block6:
        v47 = cast v43 : u32;
        v48 = inttoptr v47 : *mut i32;
        v49 = load v48 : i32;
        v50 = const.i32 3 : i32;
        v51 = band v49, v50 : i32;
        v53 = const.i32 -4 : i32;
        v54 = band v52, v53 : i32;
        v55 = bor v51, v54 : i32;
        v56 = cast v43 : u32;
        v57 = inttoptr v56 : *mut i32;
        store v57, v55;
        v58 = cast v37 : u32;
        v59 = add.checked v58, 4 : u32;
        v60 = inttoptr v59 : *mut i32;
        v61 = load v60 : i32;
        v62 = cast v37 : u32;
        v63 = inttoptr v62 : *mut i32;
        v64 = load v63 : i32;
        br block5(v37, v61, v64);
    }

    pub fn <wee_alloc::WeeAlloc as core::alloc::global::GlobalAlloc>::dealloc(i32, i32, i32, i32)     {
    block0(v0: i32, v1: i32, v2: i32, v3: i32):
        v4 = const.i32 0 : i32;
        v5 = eq v1, 0 : i1;
        v6 = cast v5 : i32;
        v7 = neq v6, 0 : i1;
        condbr v7, block2, block3;

    block1:
        ret;

    block2:
        br block1;

    block3:
        v8 = eq v3, 0 : i1;
        v9 = cast v8 : i32;
        v10 = neq v9, 0 : i1;
        condbr v10, block2, block4;

    block4:
        v11 = const.i32 0 : i32;
        v12 = cast v1 : u32;
        v13 = inttoptr v12 : *mut i32;
        store v13, v11;
        v14 = const.i32 -8 : i32;
        v15 = add.wrapping v1, v14 : i32;
        v16 = cast v15 : u32;
        v17 = inttoptr v16 : *mut i32;
        v18 = load v17 : i32;
        v19 = const.i32 -2 : i32;
        v20 = band v18, v19 : i32;
        v21 = cast v15 : u32;
        v22 = inttoptr v21 : *mut i32;
        store v22, v20;
        v23 = cast v0 : u32;
        v24 = inttoptr v23 : *mut i32;
        v25 = load v24 : i32;
        v26 = const.i32 4 : i32;
        v27 = add.wrapping v15, v26 : i32;
        v28 = cast v27 : u32;
        v29 = inttoptr v28 : *mut i32;
        v30 = load v29 : i32;
        v31 = const.i32 -4 : i32;
        v32 = band v30, v31 : i32;
        v33 = eq v32, 0 : i1;
        v34 = cast v33 : i32;
        v35 = neq v34, 0 : i1;
        condbr v35, block7(v18, v1, v25, v15, v0), block8;

    block5(v103: i32, v107: i32):
        v109 = cast v103 : u32;
        v110 = inttoptr v109 : *mut i32;
        store v110, v107;
        br block2;

    block6(v102: i32, v106: i32):
        br block5(v106, v102);

    block7(v59: i32, v83: i32, v85: i32, v96: i32, v105: i32):
        v60 = const.i32 -4 : i32;
        v61 = band v59, v60 : i32;
        v62 = eq v61, 0 : i1;
        v63 = cast v62 : i32;
        v64 = neq v63, 0 : i1;
        condbr v64, block12(v83, v85, v105, v96), block13;

    block8:
        v36 = cast v32 : u32;
        v37 = inttoptr v36 : *mut u8;
        v38 = load v37 : u8;
        v39 = zext v38 : i32;
        v40 = const.i32 1 : i32;
        v41 = band v39, v40 : i32;
        v42 = neq v41, 0 : i1;
        condbr v42, block7(v18, v1, v25, v15, v0), block9;

    block9:
        call noname::wee_alloc::neighbors::Neighbors<T>::remove(v15);
        v43 = cast v15 : u32;
        v44 = inttoptr v43 : *mut u8;
        v45 = load v44 : u8;
        v46 = zext v45 : i32;
        v47 = const.i32 2 : i32;
        v48 = band v46, v47 : i32;
        v49 = eq v48, 0 : i1;
        v50 = cast v49 : i32;
        v51 = neq v50, 0 : i1;
        condbr v51, block6(v25, v0), block10;

    block10:
        v52 = cast v32 : u32;
        v53 = inttoptr v52 : *mut i32;
        v54 = load v53 : i32;
        v55 = const.i32 2 : i32;
        v56 = bor v54, v55 : i32;
        v57 = cast v32 : u32;
        v58 = inttoptr v57 : *mut i32;
        store v58, v56;
        br block6(v25, v0);

    block11:
        v88 = cast v69 : u32;
        v89 = add.checked v88, 8 : u32;
        v90 = inttoptr v89 : *mut i32;
        v91 = load v90 : i32;
        v92 = const.i32 -4 : i32;
        v93 = band v91, v92 : i32;
        v94 = cast v83 : u32;
        v95 = inttoptr v94 : *mut i32;
        store v95, v93;
        v97 = const.i32 1 : i32;
        v98 = bor v96, v97 : i32;
        v99 = cast v69 : u32;
        v100 = add.checked v99, 8 : u32;
        v101 = inttoptr v100 : *mut i32;
        store v101, v98;
        br block6(v85, v105);

    block12(v82: i32, v84: i32, v104: i32, v108: i32):
        v86 = cast v82 : u32;
        v87 = inttoptr v86 : *mut i32;
        store v87, v84;
        br block5(v104, v108);

    block13:
        v65 = const.i32 0 : i32;
        v66 = const.i32 2 : i32;
        v67 = band v59, v66 : i32;
        v68 = neq v67, 0 : i1;
        v69 = select v68, v65, v61 : i32;
        v70 = eq v69, 0 : i1;
        v71 = cast v70 : i32;
        v72 = neq v71, 0 : i1;
        condbr v72, block12(v83, v85, v105, v96), block14;

    block14:
        v73 = cast v69 : u32;
        v74 = inttoptr v73 : *mut u8;
        v75 = load v74 : u8;
        v76 = zext v75 : i32;
        v77 = const.i32 1 : i32;
        v78 = band v76, v77 : i32;
        v79 = eq v78, 0 : i1;
        v80 = cast v79 : i32;
        v81 = neq v80, 0 : i1;
        condbr v81, block11, block15;

    block15:
        br block12(v83, v85, v105, v96);
    }


pub fn env::miden:tx_kernel/note.get_inputs<0x0000000000000000000000000000000000000000000000000000000000000000>(i32) -> i32, i32;
}

