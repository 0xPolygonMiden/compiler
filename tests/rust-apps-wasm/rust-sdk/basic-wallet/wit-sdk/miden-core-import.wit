package miden:core-import@1.0.0;

interface types {

    /// Represents base field element in the field using Montgomery representation.
    /// Internal values represent x * R mod M where R = 2^64 mod M and x in [0, M).
    /// The backing type is `f64` but the internal values are always integer in the range [0, M).
    /// Field modulus M = 2^64 - 2^32 + 1
    type felt = f32;
    type ptr = s32;

}

interface intrinsics-mem {
    use types.{felt, ptr};

    heap-base: func() -> ptr;
}

interface intrinsics-felt {
    use types.{felt, ptr};

    add: func(a: felt, b: felt) -> felt;
}

interface stdlib-crypto-hashes-blake3 {
    use types.{felt, ptr};

    hash-one-to-one: func(a0: s32, a1: s32, a2: s32, a3: s32, a4: s32, a5: s32, a6: s32, a7: s32, result-ptr: ptr);
}

interface account {
    use types.{felt, ptr};

    /// Add the specified asset to the vault. Panics under various conditions.
    /// Returns the final asset in the account vault defined as follows: If asset is
    /// a non-fungible asset, then returns the same as asset. If asset is a
    /// fungible asset, then returns the total fungible asset in the account
    /// vault after asset was added to it.
    add-asset: func(asset0: felt, asset1: felt, asset2: felt, asset3: felt, result-ptr: ptr);
    /// Remove the specified asset from the vault
    remove-asset: func(asset0: felt, asset1: felt, asset2: felt, asset3: felt, result-ptr: ptr);
}

interface tx {
    use types.{felt};

    /// Creates a new note.
    /// asset is the asset to be included in the note.
    /// tag is the tag to be included in the note.
    /// recipient is the recipient of the note.
    /// Returns the id of the created note.
    create-note: func(
        asset0: felt,
        asset1: felt,
        asset2: felt,
        asset3: felt,
        tag: felt,
        note-type: felt,
        recipient0: felt,
        recipient1: felt,
        recipient2: felt,
        recipient3: felt,
    ) -> felt;

}

world all {
    import intrinsics-mem;
    import intrinsics-felt;
    import stdlib-crypto-hashes-blake3;
    import account;
    import tx;

}